{"version":3,"sources":["config/Dependencias/autenticacaoInterceptor.js","config/Dependencias/interceptorsConfig.js","config/Dependencias/errorInterceptor.js","config/configModule.js","config/Dependencias/configValue.js","config/Dependencias/qSerial.js","config/Dependencias/routerFunction.js"],"names":[],"mappingsnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AE7BA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AD7BA;AEHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AFzIA;AGLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AH7JA;AACA","file":"../../config/configModule.min.js","sourcesContent":["(function (angular) {\r\n  angular\r\n    .module(\"appToten\")\r\n    .factory('autenticacaoInterceptor', autenticacaoInterceptor);\r\n\r\n  autenticacaoInterceptor.$inject = ['$q', '$state', '$injector'];\r\n\r\n  function autenticacaoInterceptor($q, $state, $injector) {\r\n    return {\r\n      request: function (requisicao) {\r\n        var api = $injector.get('apiService');\r\n        var autorizacaoDados = api.getStorage('auth');\r\n        if (requisicao.url.indexOf('.html') === -1 && requisicao.url.indexOf(\"api\") > -1 && autorizacaoDados.access_token) {\r\n          requisicao.headers[\"Authorization\"] = \"Bearer \" + autorizacaoDados.access_token;\r\n        }\r\n\r\n        return requisicao || $q.when(requisicao);\r\n      },\r\n      response: function (response) {\r\n        if (response.status === 401) {\r\n          var api = $injector.get('apiService');\r\n          api.clearStorage();\r\n          return $q.reject(response);\r\n        }\r\n        if ([404, 500, 400].indexOf(response.status) > -1) {\r\n          return $q.reject(response);\r\n        }\r\n        return response || $q.when(response);\r\n      }\r\n    }\r\n  }\r\n\r\n})(angular);","//=require autenticacaoInterceptor.js\r\n//=require errorInterceptor.js\r\n\r\n(function (angular) {\r\n  angular\r\n    .module(\"appToten\")\r\n    .config([\r\n              '$httpProvider',\r\n              function ($httpProvider) {\r\n                $httpProvider.interceptors.push(\"autenticacaoInterceptor\");\r\n                $httpProvider.interceptors.push(\"errorInterceptor\");\r\n              }\r\n            ]);\r\n})(angular);\r\n\r\n","(function (angular) {\r\n  angular\r\n    .module(\"appToten\")\r\n    .factory('errorInterceptor', errorInterceptor);\r\n\r\n  errorInterceptor.$inject = ['$q', '$state', '$injector'];\r\n  function errorInterceptor($q, $state, $injector) {\r\n    return {\r\n      responseError: function (rejection) {\r\n        if (rejection.status === 401) {\r\n          var api = $injector.get('apiService');\r\n          api.clearStorage();\r\n          $state.go(\"login\");\r\n        }\r\n        return $q.reject(rejection);\r\n      }\r\n    }\r\n  }\r\n\r\n})(angular);","//=require Dependencias/interceptorsConfig.js\r\n//=require Dependencias/configValue.js\r\n//=require Dependencias/qSerial.js\r\n//=require Dependencias/routerFunction.js\r\n","angular\r\n  .module(\"appToten\")\r\n  .constant(\"config\", {\r\n    \"baseUrl\": \"https://lojadalucy.com.br/\",\r\n    \"apiToken\": \"https://lojadalucy.com.br/oauth/token\",\r\n    \"apiUrl\": \"https://lojadalucy.com.br/api/\",\r\n    \"baseUrlDev\": \"https://lucyhome.dominioserver.com.br/\",\r\n    \"apiTokenDev\": \"https://lucyhome.dominioserver.com.br/oauth/token\",\r\n    \"apiUrlDev\": \"https://lucyhome.dominioserver.com.br/api/\",\r\n    \"grant_type\": \"password\",\r\n    \"client_id\": 3,\r\n    \"client_secret\": \"aw8AFIdfQ280GTnGjnJGHJGRc6lZpop1Pz3xhOj3\",\r\n    \"client_secret_dev\": \"jL2QXhoRxEkamNZsbMQWJa16cLdTlLOsA0EuJA18\",\r\n    \"scope\": \"*\",\r\n    \"dev\": true\r\n  });\r\n","angular\r\n  .module(\"appToten\")\r\n  .config([\r\n            \"$provide\",\r\n            function ($provide) {\r\n              $provide.decorator(\"$q\",\r\n                                 [\r\n                                   \"$delegate\",\r\n                                   function ($delegate) {\r\n                                     //Helper method copied from q.js.\r\n                                     var isPromiseLike = function (obj) { return obj && angular.isFunction(obj.then); }\r\n\r\n                                     /*\r\n                                      * @description Execute a collection of tasks serially.  A task is a function that returns a promise\r\n                                      *\r\n                                      * @param {Array.<Function>|Object.<Function>} tasks An array or hash of tasks.  A tasks is a function\r\n                                      *   that returns a promise.  You can also provide a collection of objects with a success tasks, failure task, and/or notify function\r\n                                      * @returns {Promise} Returns a single promise that will be resolved or rejected when the last task\r\n                                      *   has been resolved or rejected.\r\n                                      */\r\n                                     function serial(tasks) {\r\n                                       //Fake a \"previous task\" for our initial iteration\r\n                                       var prevPromise;\r\n                                       var error = new Error();\r\n                                       angular.forEach(tasks, function (task, key) {\r\n                                         var success = task.success || task;\r\n                                         var fail = task.fail;\r\n                                         var notify = task.notify;\r\n                                         var nextPromise;\r\n\r\n                                         //First task\r\n                                         if (!prevPromise) {\r\n                                           nextPromise = success();\r\n                                           if (!isPromiseLike(nextPromise)) {\r\n                                             error.message = \"Task \" + key + \" did not return a promise.\";\r\n                                             throw error;\r\n                                           }\r\n                                         } else {\r\n                                           //Wait until the previous promise has resolved or rejected to execute the next task\r\n                                           nextPromise = prevPromise.then(\r\n                                             /*success*/function (data) {\r\n                                               if (!success) { return data; }\r\n                                               var ret = success(data);\r\n                                               if (!isPromiseLike(ret)) {\r\n                                                 error.message = \"Task \" + key + \" did not return a promise.\";\r\n                                                 throw error;\r\n                                               }\r\n                                               return ret;\r\n                                             },\r\n                                             /*failure*/function (reason) {\r\n                                               if (!fail) { return $delegate.reject(reason); }\r\n                                               var ret = fail(reason);\r\n                                               if (!isPromiseLike(ret)) {\r\n                                                 error.message = \"Fail for task \" + key + \" did not return a promise.\";\r\n                                                 throw error;\r\n                                               }\r\n                                               return ret;\r\n                                             },\r\n                                             notify);\r\n                                         }\r\n                                         prevPromise = nextPromise;\r\n                                       });\r\n\r\n                                       return prevPromise || $delegate.when();\r\n                                     }\r\n\r\n                                     $delegate.serial = serial;\r\n                                     return $delegate;\r\n                                   }\r\n                                 ]);\r\n            }\r\n          ]);","(function () {\r\n  \"use strict\";\r\n\r\n  angular.module('appToten').config(routeFn);\r\n\r\n  routeFn.$inject = ['$stateProvider', '$urlRouterProvider', 'localStorageServiceProvider', 'cfpLoadingBarProvider'];\r\n\r\n  function routeFn($stateProvider, $urlRouterProvider, localStorageServiceProvider, cfpLoadingBarProvider) {\r\n    cfpLoadingBarProvider.includeSpinner = false;\r\n\r\n    localStorageServiceProvider\r\n      .setPrefix('appToten')\r\n      .setStorageType('sessionStorage');\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n\r\n    $stateProvider\r\n      .state(\"erro\", {\r\n        url: \"/404\",\r\n        templateUrl: \"./views/404.html\"\r\n      })\r\n\r\n      .state(\"home\", {\r\n        url: \"/home\",\r\n        templateUrl: \"./views/home.html\"\r\n      })\r\n\r\n      .state(\"login\", {\r\n        url: \"/\",\r\n        templateUrl: \"./views/login.html\",\r\n        controller: \"loginController\"\r\n      })\r\n\r\n      .state(\"categorias\", {\r\n        url: \"/categorias\",\r\n        templateUrl: \"./views/categorias.html\",\r\n        controller: \"categoriaController\"\r\n      })\r\n\r\n      .state(\"carrinho\", {\r\n        url: \"/meuCarrinho\",\r\n        templateUrl: \"./views/carrinho.html\",\r\n        controller: \"carrinhoController\"\r\n      })\r\n\r\n      .state(\"cadastro\", {\r\n        url: \"/cadastro\",\r\n        templateUrl: \"./views/cadastro.html\",\r\n        controller: \"cadastroController\"\r\n      })\r\n\r\n      .state(\"produtos\", {\r\n        url: \"/produtos/:categoria\",\r\n        templateUrl: \"./views/produtos.html\",\r\n        controller: \"produtosController\"\r\n      })\r\n\r\n      .state(\"produto\", {\r\n        url: \"/produto/:id\",\r\n        templateUrl: \"./views/produto.html\",\r\n        controller: \"produtoController\"\r\n      })\r\n\r\n      .state(\"pagamento\", {\r\n        url: \"/pagamento\",\r\n        templateUrl: \"./views/pagamento.html\",\r\n        controller: \"pagamentoController\"\r\n      })\r\n\r\n      .state(\"pagamentoMP\", {\r\n        url: \"/pagamento/mp\",\r\n        templateUrl: \"./views/pagamento_mp.html\",\r\n        controller: \"pagamentoMpController\"\r\n      })\r\n\r\n      .state(\"finalizacao\", {\r\n        url: \"/finalizacao\",\r\n        templateUrl: \"./views/finalizacao.html\",\r\n        controller: \"finalizacaoController\"\r\n      });\r\n  }\r\n})(angular);\r\n"]}
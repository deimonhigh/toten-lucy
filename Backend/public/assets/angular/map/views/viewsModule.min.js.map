{"version":3,"sources":["views/Controllers/loginController.js","views/viewsModule.js","views/Controllers/carrinhoController.js","views/Controllers/fotoController.js","views/Controllers/cadastroController.js","views/Controllers/produtosController.js","views/Controllers/produtoController.js","views/Controllers/finalizacaoController.js","views/Controllers/pagamentoController.js","views/Controllers/pagamentoMpController.js","views/Controllers/categoriaController.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ADjrndrnbvWA;AQfrfA;ASjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../../views/viewsModule.min.js","sourcesContent":["(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('loginController', loginController);\r\n\r\n  loginController.$inject = ['$scope', '$rootScope', 'apiService'];\r\n\r\n  function loginController($scope, $rootScope, apiService) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    vm.login = function (dados) {\r\n      apiService\r\n        .token(dados)\r\n        .then(function (res) {\r\n          if (res.error) {\r\n            alert('Usuário ou senha inválidos.');\r\n            return;\r\n          }\r\n          res.email = dados.user;\r\n          apiService.setStorage('auth', res);\r\n          root.loadConfig(dados.user, true);\r\n        }, function () {\r\n          alert('Usuário ou senha inválidos.')\r\n        });\r\n    };\r\n  }\r\n\r\n})\r\n(angular);","//=require Controllers/loginController.js\r\n//=require Controllers/carrinhoController.js\r\n//=require Controllers/fotoController.js\r\n//=require Controllers/cadastroController.js\r\n//=require Controllers/produtosController.js\r\n//=require Controllers/produtoController.js\r\n//=require Controllers/finalizacaoController.js\r\n//=require Controllers/pagamentoController.js\r\n//=require Controllers/pagamentoMpController.js\r\n//=require Controllers/categoriaController.js","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('carrinhoController', carrinhoController);\r\n\r\n  carrinhoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];\r\n\r\n  function carrinhoController($scope, $rootScope, apiService, $timeout) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    vm.totalProdutosFrete = 0;\r\n    vm.totalProdutos = 0;\r\n    vm.cep = \"\";\r\n\r\n    vm.result = {\r\n      \"show\": false\r\n    };\r\n\r\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\r\n\r\n    //region Carrinho\r\n    var calcTotal = function () {\r\n      vm.totalProdutos = vm.listaCompras.reduce(function (previousValue, obj) {\r\n        return previousValue + (obj.preco * obj.qnt);\r\n      }, 0);\r\n\r\n      if (vm.result.show) {\r\n        vm.totalProdutosFrete = angular.copy(vm.totalProdutos) + parseFloat(vm.result.valor);\r\n      } else {\r\n        vm.totalProdutosFrete = angular.copy(vm.totalProdutos);\r\n      }\r\n\r\n    };\r\n\r\n    vm.removerItem = function (item) {\r\n      vm.listaCompras = vm.listaCompras.filter(function (filtro) {\r\n        return filtro.codigobarras !== item.codigobarras;\r\n      });\r\n\r\n      apiService.setStorage('carrinho', vm.listaCompras);\r\n\r\n      calcTotal();\r\n    };\r\n\r\n    vm.calcTotalItem = function (item) {\r\n      if (item.qnt === 0) {\r\n        vm.removerItem(item)\r\n      }\r\n\r\n      calcTotal();\r\n    };\r\n\r\n    vm.minus = function (item) {\r\n      if (item.qnt - 1 < 0) {\r\n        item.qnt = 0;\r\n      } else {\r\n        item.qnt -= 1;\r\n      }\r\n\r\n      if (item.qnt === 0) {\r\n        $timeout(function () { vm.removerItem(item); });\r\n      } else {\r\n        helperCarrinho(item, item.qnt);\r\n      }\r\n\r\n      calcTotal();\r\n    };\r\n\r\n    vm.more = function (item) {\r\n      item.qnt += 1;\r\n      helperCarrinho(item, item.qnt);\r\n      calcTotal();\r\n    };\r\n\r\n    var helperCarrinho = function (item, qnt) {\r\n      var exist = vm.listaCompras.filter(function (obj) {\r\n        return obj.codigobarras === item.codigobarras;\r\n      });\r\n\r\n      if (exist.length > 0) {\r\n        vm.carrinho = vm.listaCompras.map(function (obj) {\r\n          if (obj.codigobarras === item.codigobarras) {\r\n            obj.qnt = qnt;\r\n          }\r\n          return obj;\r\n        });\r\n        apiService.setStorage('carrinho', vm.listaCompras);\r\n      } else {\r\n        item.qnt = qnt;\r\n        vm.listaCompras.push(item);\r\n        apiService.setStorage('carrinho', vm.listaCompras);\r\n      }\r\n    };\r\n\r\n    vm.limparCarrinho = function () {\r\n      apiService.delStorage('carrinho');\r\n      root.itensCarrinho = 0;\r\n      vm.listaCompras = [];\r\n      calcTotal();\r\n    };\r\n    //endregion\r\n\r\n    vm.calcularFrete = function () {\r\n      apiService.cep(vm.cep).then(function (res) {\r\n        vm.result.local = res.uf + ' - ' + res.localidade;\r\n\r\n        var dados = {\r\n          \"cep\": parseInt(vm.cep),\r\n          \"peso\": vm.listaCompras.reduce(function (carry, next) {\r\n            return carry + parseFloat(next.peso);\r\n          }, 0)\r\n        };\r\n\r\n        getFrete(dados);\r\n      }, function () {\r\n        alert('CEP não encontrado em nossa base.');\r\n      });\r\n    };\r\n\r\n    var getFrete = function (dados) {\r\n      apiService\r\n        .post('frete', dados)\r\n        .then(function (res) {\r\n          vm.result.valor = res.result.valor;\r\n          vm.result.prazo = res.result.prazo;\r\n          vm.result.show = true;\r\n\r\n          vm.totalProdutosFrete = angular.copy(vm.totalProdutos) + parseFloat(res.result.valor);\r\n        }, function () {\r\n          alert('CEP não encontrado em nossa base.');\r\n        });\r\n    };\r\n\r\n    calcTotal();\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('fotoController', fotoController);\r\n\r\n  fotoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];\r\n\r\n  function fotoController($scope, $rootScope, apiService, $timeout) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    vm.hideButtonComprovante = false;\r\n\r\n    var _video = null;\r\n\r\n    vm.bandeiras = [\r\n      {\r\n        \"id\": \"aVista\",\r\n        \"descricao\": \"À vista\"\r\n      },\r\n      {\r\n        \"id\": \"Visa\",\r\n        \"descricao\": \"Visa\"\r\n      },\r\n      {\r\n        \"id\": \"Mastercard\",\r\n        \"descricao\": \"Mastercard\"\r\n      },\r\n      {\r\n        \"id\": \"Hipercard\",\r\n        \"descricao\": \"Hipercard\"\r\n      },\r\n      {\r\n        \"id\": \"American Express\",\r\n        \"descricao\": \"American Express\"\r\n      },\r\n      {\r\n        \"id\": \"Diners\",\r\n        \"descricao\": \"Diners\"\r\n      },\r\n      {\r\n        \"id\": \"Elo\",\r\n        \"descricao\": \"Elo\"\r\n      }\r\n    ];\r\n\r\n    var comprovanteBase = {\r\n      \"bandeira\": null,\r\n      \"codigo\": null\r\n    };\r\n\r\n    vm.comprovantes = [\r\n      angular.copy(comprovanteBase)\r\n    ];\r\n\r\n    vm.removeItem = function (item) {\r\n      vm.comprovantes = vm.comprovantes.filter(function (obj) {\r\n        return obj.$$hashKey != item.$$hashKey;\r\n      });\r\n      vm.hideButtonComprovante = vm.comprovantes.length > 4;\r\n    };\r\n\r\n    vm.addComprovante = function () {\r\n      if (vm.comprovantes.length < 5) {\r\n        vm.comprovantes.push(angular.copy(comprovanteBase));\r\n      }\r\n      vm.hideButtonComprovante = vm.comprovantes.length > 4;\r\n    };\r\n\r\n    vm.closeModal = function () {\r\n      apiService.setStorage('comprovanteCodigos', vm.comprovantes);\r\n      apiService.post('pedidos/checarComprovantes', vm.comprovantes).then(function (res) {\r\n        root.foto = false;\r\n        vm.confirmFoto = false;\r\n        root.$broadcast('confirmarImg');\r\n        vm.comprovantes = [\r\n          angular.copy(comprovanteBase)\r\n        ];\r\n      }, function (err) {\r\n        err.error.bandeira = (err.error.bandeira == 'aVista') ? 'Á vista' : err.error.bandeira;\r\n        alert('O comprovante da bandeira \\'' + err.error.bandeira + '\\' e código \\'' + err.error.codigo + '\\' já existe em nossa base.');\r\n      });\r\n    };\r\n\r\n    vm.okFoto = function () {\r\n      vm.confirmFoto = true;\r\n    };\r\n\r\n    vm.notOkFoto = function () {\r\n      vm.confirmFoto = false;\r\n    };\r\n\r\n    vm.patOpts = {\r\n      x: 0,\r\n      y: 0,\r\n      w: 600,\r\n      h: 540\r\n    };\r\n\r\n    vm.channel = {};\r\n\r\n    vm.onError = function (err) {\r\n      console.log(err);\r\n    };\r\n\r\n    vm.onSuccess = function () {\r\n      _video = vm.channel.video;\r\n      vm.$apply(function () {\r\n        vm.patOpts.w = _video.width;\r\n        vm.patOpts.h = _video.height;\r\n      });\r\n    };\r\n\r\n    vm.makeSnapshot = function () {\r\n      if (_video) {\r\n        var patCanvas = document.querySelector('#snapshot');\r\n        if (!patCanvas) return;\r\n        var ctxPat = patCanvas.getContext('2d');\r\n\r\n        var idata = getVideoData(vm.patOpts.x, vm.patOpts.y, vm.patOpts.w, vm.patOpts.h);\r\n        ctxPat.putImageData(idata, 0, 0);\r\n\r\n        vm.confirmFoto = true;\r\n\r\n        vm.imgResponse = patCanvas.toDataURL();\r\n        apiService.setStorage('comprovante', vm.imgResponse);\r\n      }\r\n    };\r\n\r\n    var getVideoData = function getVideoData(x, y, w, h) {\r\n      var hiddenCanvas = document.createElement('canvas');\r\n\r\n      hiddenCanvas.width = _video.width;\r\n      hiddenCanvas.height = _video.height;\r\n      var ctx = hiddenCanvas.getContext('2d');\r\n      ctx.drawImage(_video, 0, 0, _video.width, _video.height);\r\n      return ctx.getImageData(x, y, w, h);\r\n    };\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('cadastroController', cadastroController);\r\n\r\n  cadastroController.$inject = ['$scope', '$rootScope', 'apiService', 'latinizeService', '$filter', '$state'];\r\n\r\n  function cadastroController($scope, $rootScope, apiService, latinizeService, $filter, $state) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    var enviarParaSalvar = {\r\n      \"id\": null,\r\n      \"documento\": null,\r\n      \"nome\": null,\r\n      \"telefone\": null,\r\n      \"celular\": null,\r\n      \"enderecos\": [],\r\n    };\r\n\r\n    vm.dados = {};\r\n    vm.dados.enderecoCerto = true;\r\n    vm.dados.sexo = \"M\";\r\n    vm.dados.outro = {};\r\n\r\n    vm.estados = cidadesEstados.estados.map(function (obj) {\r\n      return {\r\n        \"sigla\": obj.sigla,\r\n        \"nome\": obj.nome\r\n      };\r\n    });\r\n\r\n    //region Procura Cidades\r\n    vm.$watch(function ($scope) {\r\n      return $scope.dados.uf;\r\n    }, function (nVal) {\r\n      if (nVal) {\r\n        vm.procuraCidades(nVal);\r\n      }\r\n    });\r\n\r\n    vm.procuraCidades = function (uf) {\r\n      vm.cidades = cidadesEstados.estados.filter(function (obj) {\r\n        return obj.sigla === uf.sigla;\r\n      })[0].cidades.map(function (obj) {\r\n        return {\r\n          \"nome\": obj,\r\n          \"cidade\": latinizeService.latinize(obj.toUpperCase())\r\n        };\r\n      });\r\n\r\n      root.$broadcast('cidadeLoaded');\r\n    };\r\n\r\n    vm.$watch(function ($scope) {\r\n      return $scope.dados.outro.uf;\r\n    }, function (nVal) {\r\n      if (nVal) {\r\n        vm.procuraCidadesOutro(nVal);\r\n      }\r\n    });\r\n\r\n    vm.procuraCidadesOutro = function (uf) {\r\n      vm.cidadesOutro = cidadesEstados.estados.filter(function (obj) {\r\n        return obj.sigla === uf.sigla;\r\n      })[0].cidades.map(function (obj) {\r\n        return {\r\n          \"nome\": obj,\r\n          \"cidade\": latinizeService.latinize(obj.toUpperCase())\r\n        };\r\n      });\r\n\r\n      root.$broadcast('cidadeLoadedOutro');\r\n    };\r\n    //endregion\r\n\r\n    //region Carregar Cidades\r\n    vm.$on('cidadeLoaded', function () {\r\n      if (vm.dados.cidadeTemp) {\r\n        var temp = $filter('filter')(vm.cidades, {'cidade': latinizeService.latinize(vm.dados.cidadeTemp).toUpperCase()}, true);\r\n        vm.dados.cidade = temp && temp[0] ? temp[0] : {};\r\n        delete vm.dados.cidadeTemp;\r\n      }\r\n    });\r\n\r\n    vm.$on('cidadeLoadedOutro', function () {\r\n      if (vm.dados.outro.cidadeTempOutro) {\r\n        var tempOutro = $filter('filter')(vm.cidadesOutro, {'cidade': latinizeService.latinize(vm.dados.outro.cidadeTempOutro).toUpperCase()}, true);\r\n        vm.dados.outro.cidade = tempOutro && tempOutro[0] ? tempOutro[0] : {};\r\n        delete vm.dados.outro.cidadeTempOutro;\r\n      }\r\n    });\r\n    //endregion\r\n\r\n    //region Cliente\r\n    vm.procurarCliente = function (cpf) {\r\n      if (!cpf || cpf.length < 11) {\r\n        return;\r\n      }\r\n\r\n      apiService\r\n        .search('clientes', cpf)\r\n        .then(function (res) {\r\n          vm.dados.documento = res.result.documento;\r\n          vm.dados.nome = res.result.nome;\r\n          vm.dados.telefone = res.result.telefone;\r\n          vm.dados.celular = res.result.celular;\r\n          vm.dados.id = res.result.id;\r\n          vm.dados.sexo = res.result.sexo;\r\n          vm.dados.email = res.result.email;\r\n\r\n          if (res.result.enderecos.length == 1) {\r\n            vm.dados.enderecoCerto = true;\r\n            vm.dados.cep = res.result.enderecos[0].cep;\r\n            vm.dados.numero = res.result.enderecos[0].numero;\r\n            vm.dados.endereco = res.result.enderecos[0].endereco;\r\n            vm.dados.bairro = res.result.enderecos[0].bairro;\r\n            vm.dados.uf = $filter('filter')(vm.estados, {'sigla': res.result.enderecos[0].uf.toUpperCase()}, true)[0];\r\n            vm.dados.cidadeTemp = res.result.enderecos[0].cidade;\r\n          } else {\r\n            vm.dados.enderecoCerto = false;\r\n            res.result.enderecos.map(function (obj) {\r\n              if (obj.enderecooriginal == 1) {\r\n                vm.dados.outro.cep = obj.cep;\r\n                vm.dados.outro.numero = obj.numero;\r\n                vm.dados.outro.endereco = obj.endereco;\r\n                vm.dados.outro.bairro = obj.bairro;\r\n                vm.dados.outro.uf = $filter('filter')(vm.estados, {'sigla': obj.uf.toUpperCase()}, true)[0];\r\n                vm.dados.outro.cidadeTempOutro = obj.cidade;\r\n              } else {\r\n                vm.dados.cep = obj.cep;\r\n                vm.dados.numero = obj.numero;\r\n                vm.dados.endereco = obj.endereco;\r\n                vm.dados.bairro = obj.bairro;\r\n                vm.dados.uf = $filter('filter')(vm.estados, {'sigla': obj.uf.toUpperCase()}, true)[0];\r\n                vm.dados.cidadeTemp = obj.cidade;\r\n              }\r\n            });\r\n          }\r\n\r\n        }, function (err) {\r\n//          console.log(err);\r\n        });\r\n    };\r\n\r\n    vm.salvarDados = function () {\r\n      var enviar = angular.copy(vm.dados);\r\n      enviarParaSalvar.enderecos = [];\r\n\r\n      enviarParaSalvar.id = enviar.id;\r\n      enviarParaSalvar.documento = enviar.documento;\r\n      enviarParaSalvar.nome = enviar.nome;\r\n      enviarParaSalvar.telefone = enviar.telefone;\r\n      enviarParaSalvar.celular = enviar.celular;\r\n      enviarParaSalvar.email = enviar.email;\r\n      enviarParaSalvar.sexo = enviar.sexo;\r\n\r\n      var endereco1 = {\r\n        \"cep\": enviar.cep,\r\n        \"endereco\": enviar.endereco,\r\n        \"numero\": enviar.numero,\r\n        \"bairro\": enviar.bairro,\r\n        \"uf\": enviar.uf.sigla,\r\n        \"cidade\": enviar.cidade.nome,\r\n        \"enderecoOriginal\": enviar.enderecoCerto\r\n      };\r\n      enviarParaSalvar.enderecos.push(endereco1);\r\n\r\n      if (!enviar.enderecoCerto) {\r\n        var endereco2 = {\r\n          \"cep\": enviar.outro.cep,\r\n          \"endereco\": enviar.outro.endereco,\r\n          \"numero\": enviar.outro.numero,\r\n          \"bairro\": enviar.outro.bairro,\r\n          \"uf\": enviar.outro.uf.sigla,\r\n          \"cidade\": enviar.outro.cidade.nome,\r\n          \"enderecoOriginal\": !enviar.enderecoCerto\r\n        };\r\n        enviarParaSalvar.enderecos.push(endereco2);\r\n      }\r\n\r\n      enviarParaSalvar.peso = apiService.getStorage('carrinho').reduce(function (carry, next) {\r\n        return carry + parseFloat(next.peso);\r\n      }, 0);\r\n\r\n      apiService.post('clientes/save', enviarParaSalvar).then(function (res) {\r\n        apiService.setStorage('cliente', res.result);\r\n        if (root.temaStorage.mercado_pago) {\r\n          $state.go('pagamentoMP');\r\n        } else {\r\n          $state.go('pagamento');\r\n        }\r\n      }, function (err) {\r\n        alert('Ocorreu um erro ao salvar os dados do Cliente.')\r\n      })\r\n    };\r\n    //endregion\r\n\r\n    //region Limpar Endereços\r\n    var limpaEndereco = function () {\r\n      vm.dados.endereco = \"\";\r\n      vm.dados.bairro = \"\";\r\n      vm.dados.uf = \"\";\r\n      delete vm.dados.cidadeTemp;\r\n    };\r\n\r\n    var limpaOutroEndereco = function () {\r\n      vm.dados.outro.endereco = \"\";\r\n      vm.dados.outro.bairro = \"\";\r\n      vm.dados.outro.uf = \"\";\r\n      delete vm.dados.outro.cidadeTempOutro;\r\n    };\r\n    //endregion\r\n\r\n    //region Procurar CEP's\r\n    vm.procuraCep = function (cep) {\r\n      apiService.cep(cep).then(function (res) {\r\n        limpaEndereco();\r\n        vm.dados.endereco = res.logradouro;\r\n        vm.dados.bairro = res.bairro;\r\n        vm.dados.uf = $filter('filter')(vm.estados, {'sigla': res.uf}, true)[0];\r\n        vm.dados.cidadeTemp = res.localidade;\r\n      });\r\n    };\r\n\r\n    vm.procuraOutroCep = function (cep) {\r\n      apiService.cep(cep).then(function (res) {\r\n        limpaOutroEndereco();\r\n        vm.dados.outro.endereco = res.logradouro;\r\n        vm.dados.outro.bairro = res.bairro;\r\n        vm.dados.outro.uf = $filter('filter')(vm.estados, {'sigla': res.uf}, true)[0];\r\n        vm.dados.outro.cidadeTempOutro = res.localidade;\r\n      });\r\n    };\r\n    //endregion\r\n  }\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('produtosController', produtosController);\r\n\r\n  produtosController.$inject = ['$scope', '$rootScope', 'apiService', '$stateParams', '$state', '$filter'];\r\n\r\n  function produtosController($scope, $rootScope, apiService, $stateParams, $state, $filter) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    if (!$stateParams.categoria) {\r\n      $state.go('categorias');\r\n      return\r\n    }\r\n\r\n    vm.maxParcelas = root.temaStorage['parcela' + root.temaStorage.max_parcelas];\r\n\r\n    vm.menuActive = $stateParams.categoria;\r\n\r\n    vm.loading = false;\r\n\r\n    vm.categorias = apiService.getStorage('categorias');\r\n\r\n    vm.produtoActive = $filter('filter')(vm.categorias, {'id': parseInt(vm.menuActive)}, true)[0].descricao;\r\n\r\n    vm.produtos = [];\r\n\r\n    var categoriasItem = vm.categorias.filter(function (obj) {\r\n      return obj.id == $stateParams.categoria\r\n    })[0];\r\n\r\n    if (categoriasItem.categorias) {\r\n      var itensDoFiltro = categoriasItem.categorias.map(function (obj) {\r\n        return obj.codigocategoria;\r\n      });\r\n\r\n      var filtro = {\r\n        \"itens\": itensDoFiltro\r\n      }\r\n\r\n      apiService.post('produtos/filtro', filtro).then(function (res) {\r\n        vm.loading = true;\r\n        vm.produtos = res.result.filter(function (obj) {\r\n          return obj['preco' + root.temaStorage.listaPreco] > 0;\r\n        }).map(function (obj) {\r\n          obj.preco = obj['preco' + root.temaStorage.listaPreco];\r\n          obj.precopromocao = obj['precopromocao' + root.temaStorage.listaPreco];\r\n\r\n          if (parseFloat(obj.precopromocao) == 0) {\r\n            obj.comJuros = ((parseFloat(obj.preco) + (parseFloat(obj.preco) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\r\n          } else {\r\n            obj.comJuros = ((parseFloat(obj.precopromocao) + (parseFloat(obj.precopromocao) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\r\n          }\r\n\r\n          return obj;\r\n        });\r\n      });\r\n\r\n    }\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('produtoController', produtoController);\r\n\r\n  produtoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$stateParams', '$timeout'];\r\n\r\n  function produtoController($scope, $rootScope, apiService, $state, $stateParams, $timeout) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    vm.qnt = 1;\r\n    vm.produtosRelacionados = [];\r\n\r\n    vm.carrinho = apiService.getStorage('carrinho') || [];\r\n    vm.produto = {};\r\n\r\n    vm.maxParcelas = root.temaStorage['parcela' + root.temaStorage.max_parcelas];\r\n\r\n    apiService.get('produtos/' + $stateParams.id).then(function (res) {\r\n      vm.produto = res.result;\r\n\r\n      vm.produto.preco = vm.produto['preco' + root.temaStorage.listaPreco];\r\n      vm.produto.precopromocao = vm.produto['precopromocao' + root.temaStorage.listaPreco];\r\n\r\n      vm.imagemGrande = vm.produto.imagens[0];\r\n\r\n      if (parseFloat(vm.produto.precopromocao) == 0) {\r\n        vm.produto.comJuros = ((parseFloat(vm.produto.preco) + (parseFloat(vm.produto.preco) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\r\n        vm.produto.semJuros = (parseFloat(vm.produto.preco) + (parseFloat(vm.produto.preco) * parseFloat(root.temaStorage.parcela0)) / 100).toFixed(2);\r\n      } else {\r\n        vm.produto.comJuros = ((parseFloat(vm.produto.precopromocao) + (parseFloat(vm.produto.precopromocao) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\r\n        vm.produto.semJuros = (parseFloat(vm.produto.precopromocao) + (parseFloat(vm.produto.precopromocao) * parseFloat(root.temaStorage.parcela0)) / 100).toFixed(2);\r\n      }\r\n\r\n      apiService.post('produtos/relacionados', {\r\n        \"produtocodigo\": vm.produto.codigoproduto\r\n      }).then(function (res) {\r\n        vm.produtosRelacionados = res.result;\r\n      }, function (err) {\r\n        alert(err.error);\r\n      });\r\n\r\n    }, function (err) {\r\n      alert(err.error);\r\n    });\r\n\r\n    vm.minus = function () {\r\n      if (vm.qnt - 1 < 0) {\r\n        vm.qnt = 0;\r\n      } else {\r\n        vm.qnt -= 1;\r\n      }\r\n\r\n      if (vm.qnt == 0) {\r\n        vm.removerItem(item);\r\n      }\r\n    };\r\n\r\n    vm.more = function () {\r\n      vm.qnt += 1;\r\n    };\r\n\r\n    vm.selectColor = function (item) {\r\n      vm.cores.map(function (obj) {\r\n        obj.selected = false;\r\n      });\r\n\r\n      item.selected = true;\r\n    };\r\n\r\n    vm.changeImg = function (item) {\r\n      vm.imagemGrande = item;\r\n    };\r\n\r\n    vm.addCarrinho = function (item) {\r\n      var exist = vm.carrinho.filter(function (obj) {\r\n        return obj.codigobarras == item.codigobarras;\r\n      });\r\n\r\n      if (exist.length > 0) {\r\n        vm.carrinho = vm.carrinho.map(function (obj) {\r\n          if (obj.codigobarras) {\r\n            obj.qnt = vm.qnt;\r\n          }\r\n          return obj;\r\n        });\r\n\r\n        $timeout(function () {\r\n          root.itensCarrinho = vm.carrinho.length;\r\n        });\r\n\r\n        apiService.setStorage('carrinho', vm.carrinho);\r\n      } else {\r\n        item.qnt = vm.qnt;\r\n        vm.carrinho.push(item);\r\n        apiService.setStorage('carrinho', vm.carrinho);\r\n      }\r\n      $state.go('carrinho');\r\n    };\r\n  };\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('finalizacaoController', finalizacaoController);\r\n\r\n  finalizacaoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout'];\r\n\r\n  function finalizacaoController($scope, $rootScope, apiService, $state, $timeout) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n    vm.dadosVendedor = {};\r\n    vm.formaPagamento = '';\r\n    vm.editarPagamentoFlag = false;\r\n    vm.cliente = apiService.getStorage('cliente');\r\n    vm.formaPagamentoStorage = apiService.getStorage('formaPagamento');\r\n    vm.comprovante = apiService.getStorage('comprovante');\r\n    vm.frete = apiService.getStorage('frete');\r\n    var boleto = apiService.getStorage('boleto');\r\n    vm.hideComprovante = true;\r\n    vm.showBoleto = {\r\n      \"show\": false,\r\n      \"boleto\": \"\"\r\n    };\r\n    vm.totalCarrinho = 0;\r\n    vm.totalCarrinhoFrete = 0;\r\n\r\n    $timeout(function () {\r\n      root.itensCarrinho = 0;\r\n    });\r\n\r\n    apiService.delStorage('cliente');\r\n    apiService.delStorage('carrinho');\r\n\r\n    if (boleto.boleto) {\r\n      vm.showBoleto.show = true;\r\n      vm.showBoleto.boleto = boleto.boleto;\r\n    }\r\n\r\n    if (boleto.mp) {\r\n      vm.hideComprovante = false;\r\n    }\r\n\r\n    var getComprovante = function () {\r\n      $timeout(function () {\r\n        vm.comprovante = apiService.getStorage('comprovante');\r\n      });\r\n\r\n      if (!vm.comprovante) {\r\n        getComprovante();\r\n      }\r\n    };\r\n\r\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\r\n\r\n    var calcTotal = function () {\r\n      return vm.listaCompras.reduce(function (previousValue, obj) {\r\n          return previousValue + (obj.preco * obj.qnt);\r\n        }, 0) + parseFloat(vm.cliente.freteValor.valor);\r\n    };\r\n\r\n    vm.totalCarrinho = calcTotal();\r\n\r\n    var padLeft = function (nr, n, str) {\r\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\r\n    };\r\n\r\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\r\n\r\n    vm.limparSessao = function () {\r\n      apiService.delStorage('comprovante');\r\n      apiService.delStorage('cliente');\r\n      apiService.delStorage('carrinho');\r\n      apiService.delStorage('formaPagamento');\r\n      apiService.delStorage('comprovanteCodigos');\r\n      apiService.delStorage('vendedor');\r\n      apiService.delStorage('frete');\r\n      apiService.delStorage('boleto');\r\n      $timeout(function () {\r\n        root.itensCarrinho = 0;\r\n      });\r\n    };\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('pagamentoController', pagamentoController);\r\n\r\n  pagamentoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout'];\r\n\r\n  function pagamentoController($scope, $rootScope, apiService, $state, $timeout) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n    vm.dadosVendedor = {};\r\n    vm.formaPagamento = '';\r\n    vm.editarPagamentoFlag = false;\r\n    vm.cliente = apiService.getStorage('cliente');\r\n    vm.formaPagamentoStorage = apiService.getStorage('formaPagamento');\r\n    vm.comprovante = apiService.getStorage('comprovante');\r\n    vm.frete = apiService.getStorage('frete');\r\n\r\n    vm.totalCarrinho = 0;\r\n    vm.totalCarrinhoFrete = 0;\r\n\r\n    var getComprovante = function () {\r\n      $timeout(function () {\r\n        vm.comprovante = apiService.getStorage('comprovante');\r\n      });\r\n\r\n      if (!vm.comprovante) {\r\n        getComprovante();\r\n      }\r\n    };\r\n\r\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\r\n\r\n    var calcTotal = function () {\r\n      return vm.listaCompras.reduce(function (previousValue, obj) {\r\n        return previousValue + (obj.preco * obj.qnt);\r\n      }, 0);\r\n    };\r\n\r\n    vm.totalCarrinho = calcTotal();\r\n\r\n    var padLeft = function (nr, n, str) {\r\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\r\n    };\r\n\r\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\r\n\r\n    vm.validarVendedor = function () {\r\n      var enviar = {};\r\n      apiService.delStorage('comprovante');\r\n      enviar.identificacao = vm.dadosVendedor.identificacao;\r\n      enviar.senha = vm.dadosVendedor.senha;\r\n      apiService.post('vendedores/validate', enviar).then(function (res) {\r\n        apiService.setStorage('vendedor', res.result);\r\n        root.openFoto();\r\n      }, function (err) {\r\n        alert(err.error);\r\n      })\r\n    };\r\n\r\n    vm.editarPagamento = function () {\r\n      vm.editarPagamentoFlag = !vm.editarPagamentoFlag;\r\n\r\n      apiService.setStorage('formaPagamento', vm.formaPagamento);\r\n\r\n      if (vm.editarPagamentoFlag && vm.formaPagamento.total) {\r\n        $timeout(function () {\r\n          var frete = 0;\r\n          if (vm.frete) {\r\n            frete = parseFloat(vm.cliente.freteValor.valor);\r\n          }\r\n          vm.totalCarrinhoFrete = angular.copy(vm.totalCarrinho) + frete;\r\n        });\r\n      }\r\n    };\r\n\r\n    var calcularFrete = function (cep) {\r\n      var dados = {\r\n        \"cep\": cep,\r\n        \"peso\": vm.listaCompras.reduce(function (carry, next) {\r\n          return carry + parseFloat(next.peso);\r\n        }, 0),\r\n        \"total\": calcTotal()\r\n      };\r\n      getFrete(dados);\r\n    };\r\n\r\n    var getFrete = function (dados) {\r\n      apiService\r\n        .post('frete', dados)\r\n        .then(function (res) {\r\n          apiService.setStorage('frete', res.result);\r\n          vm.frete = res.result;\r\n          vm.totalCarrinhoFrete = dados.total + parseFloat(res.result.valor);\r\n        });\r\n    };\r\n\r\n    vm.$on('confirmarImg', function () {\r\n      var formaPagamento = apiService.getStorage('formaPagamento');\r\n      vm.comprovante = apiService.getStorage('comprovante');\r\n      var comprovantes = apiService.getStorage('comprovanteCodigos');\r\n      var auth = apiService.getStorage('auth');\r\n      vm.cliente = apiService.getStorage('cliente');\r\n      var vendedor = apiService.getStorage('vendedor');\r\n\r\n      var send = {};\r\n      send.idcliente = vm.cliente.id;\r\n      send.email = auth.email;\r\n      send.frete = vm.frete.valor;\r\n      send.prazo = vm.frete.prazo;\r\n      send.total = vm.formaPagamentoStorage.total;\r\n      send.totalSemJuros = vm.listaCompras.reduce(function (previousValue, obj) {\r\n        return previousValue + (obj.preco * obj.qnt);\r\n      }, 0);\r\n      send.idPedido = vm.cliente.idPedido;\r\n      send.img = vm.comprovante;\r\n\r\n      send.produtos = vm.listaCompras.map(function (obj) {\r\n        return {\r\n          \"produto_id\": obj.id,\r\n          \"codigoproduto\": obj.codigoproduto,\r\n          \"qnt\": obj.qnt,\r\n          \"preco\": obj.preco,\r\n        };\r\n      });\r\n\r\n      if (comprovantes) {\r\n        send.comprovantes = comprovantes.map(function (obj) {\r\n          return {\r\n            \"bandeira\": obj.bandeira.id,\r\n            \"codigo\": obj.codigo,\r\n            \"vendedor_id\": vendedor.id\r\n          };\r\n        });\r\n      }\r\n\r\n      send.parcelas = formaPagamento.parcelas;\r\n      send.aVista = formaPagamento.aVista;\r\n\r\n      apiService.post('pedidos/save', send).then(function (res) {\r\n        alert('Pedido finalizado com sucesso!');\r\n        apiService.setStorage('boleto', res.result);\r\n        $state.go('finalizacao');\r\n      }, function (err) {\r\n        if (err.code === 1) {\r\n          alert(err.error);\r\n        } else {\r\n          alert('Pedido não concluída, por favor tente novamente!');\r\n        }\r\n        $state.go('pagamento');\r\n      });\r\n    });\r\n\r\n    var comJurosAVista = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela0']) / 100)) + parseFloat(vm.cliente.freteValor.valor);\r\n    vm.listaPagamentos = [\r\n      {\r\n        \"index\": 0,\r\n        \"parcelas\": 0,\r\n        \"aVista\": true,\r\n        \"descricao\": 'À vista | R$ ' + comJurosAVista.toFixed(2).replace('.', ','),\r\n        \"total\": comJurosAVista\r\n      }\r\n    ];\r\n\r\n    var maxParcelas = root.temaStorage.max_parcelas;\r\n\r\n    for (var i = 1; i <= maxParcelas; i++) {\r\n      var comJuros = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela' + i]) / 100)) + parseFloat(vm.cliente.freteValor.valor);\r\n      var pagamento = {\r\n        \"index\": i + 1,\r\n        \"parcelas\": i,\r\n        \"aVista\": false,\r\n        \"descricao\": 'Cartão de crédito | ' + i + 'x de R$ ' + (comJuros / i).toFixed(2).replace('.', ','),\r\n        \"total\": comJuros\r\n      };\r\n\r\n      if (root.temaStorage['parcela' + i] == 0) {\r\n        pagamento.descricao += \" s/ juros\"\r\n      }\r\n\r\n      vm.listaPagamentos.push(pagamento);\r\n    }\r\n\r\n    calcularFrete(vm.cliente.cep);\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('pagamentoMpController', pagamentoMpController);\r\n\r\n  pagamentoMpController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout', 'mercadoPago', 'cfpLoadingBar'];\r\n\r\n  function pagamentoMpController($scope, $rootScope, apiService, $state, $timeout, mercadoPago, cfpLoadingBar) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n    vm.dadosVendedor = {};\r\n    vm.formaPagamento = '';\r\n    vm.editarPagamentoFlag = false;\r\n    vm.cliente = apiService.getStorage('cliente');\r\n    vm.comprovante = apiService.getStorage('comprovante');\r\n    vm.frete = apiService.getStorage('frete');\r\n\r\n    vm.dados = {\r\n      'type': 'CPF',\r\n      'cpf': vm.cliente.documento\r\n    };\r\n\r\n    vm.okCartaoCredito = false;\r\n\r\n    vm.infoNeeded = true;\r\n\r\n    vm.tipoPagamento = apiService.getStorage('tiposPagamentoMP') || [];\r\n\r\n    vm.totalCarrinho = 0;\r\n    vm.totalCarrinhoFrete = 0;\r\n\r\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\r\n\r\n    if (vm.tipoPagamento.length === 0) {\r\n      mercadoPago.getPaymentsMethods().then(function (res) {\r\n        console.log(res);\r\n        apiService.setStorage('tiposPagamentoMP', res.response);\r\n        vm.tipoPagamento = res.response;\r\n      });\r\n    }\r\n\r\n    vm.mesValidade = Array.apply(null, Array(12)).map(function (_, i) {\r\n      return {\r\n        \"name\": i + 1,\r\n        \"id\": i + 1\r\n      };\r\n    });\r\n    vm.dados.mes = 1;\r\n\r\n    var anoAtual = new Date().getFullYear();\r\n    vm.anoValidade = Array.apply(null, Array(12)).map(function (_, i) {\r\n      return {\r\n        \"name\": anoAtual + i,\r\n        \"id\": anoAtual + i\r\n      };\r\n    });\r\n    vm.dados.ano = anoAtual;\r\n\r\n    vm.validaCartao = function (cartao) {\r\n      if (cartao && cartao.toString().length >= 6) {\r\n        mercadoPago.getBin(cartao.toString()).then(function (res) {\r\n          vm.okCartaoCredito = res.status !== 200 && res.status !== 201;\r\n          if (res.status !== 200 && res.status !== 201) {\r\n            alert('Parece que seu cartão não é válido.');\r\n          }\r\n          vm.tipoPagamento.map(function (obj) {\r\n            if (res.status !== 200 && res.status !== 201) {\r\n              obj.active = false;\r\n            } else {\r\n              vm.dados.typeId = res.response[0].id;\r\n              obj.active = obj.id === res.response[0].id;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n    vm.salvarPagamento = function () {\r\n      var formaPagamento = apiService.getStorage('formaPagamento');\r\n      var comprovante = apiService.getStorage('comprovante');\r\n      var auth = apiService.getStorage('auth');\r\n      var cliente = apiService.getStorage('cliente');\r\n      var vendedor = apiService.getStorage('vendedor');\r\n      var formaPagamentoStorage = apiService.getStorage('formaPagamento');\r\n\r\n      cfpLoadingBar.start();\r\n\r\n      mercadoPago.getIdTypes().then(function (res) {\r\n        vm.dados.type = res.response[0].id;\r\n        mercadoPago.mPago().clearSession();\r\n\r\n        var form = document.getElementById(\"formaPagamento\");\r\n        mercadoPago.createToken(form).then(function (res) {\r\n          cfpLoadingBar.complete();\r\n\r\n          if (res.status !== 200 && res.status !== 201) {\r\n            alert('Algumas informações do seu cartão não estão corretas, por favor verifique.');\r\n            return;\r\n          }\r\n          var send = {};\r\n          send.token = res.response.id;\r\n          send.method = vm.dados.typeId;\r\n          send.idcliente = cliente.id;\r\n          send.email = auth.email;\r\n          send.frete = vm.frete.valor;\r\n          send.prazo = vm.frete.prazo;\r\n          send.total = formaPagamentoStorage.total;\r\n          send.totalSemJuros = vm.listaCompras.reduce(function (previousValue, obj) {\r\n            return previousValue + (obj.preco * obj.qnt);\r\n          }, 0);\r\n\r\n          send.idPedido = cliente.idPedido;\r\n\r\n          send.produtos = vm.listaCompras.map(function (obj) {\r\n            return {\r\n              \"produto_id\": obj.id,\r\n              \"codigoproduto\": obj.codigoproduto,\r\n              \"qnt\": obj.qnt,\r\n              \"preco\": obj.preco,\r\n            };\r\n          });\r\n\r\n          send.parcelas = formaPagamento.parcelas;\r\n          send.aVista = formaPagamento.aVista;\r\n\r\n          apiService.post('pedidos/saveMp', send).then(function (res) {\r\n            if (res.result.boleto) {\r\n              alert('Pedido esperando finalização!');\r\n            } else {\r\n              alert('Pedido finalizado com sucesso!');\r\n            }\r\n\r\n            apiService.setStorage('boleto', res.result);\r\n            $state.go('finalizacao');\r\n          }, function (err) {\r\n            if (err.code == 1) {\r\n              alert(err.error.msg);\r\n            } else {\r\n              alert('Pedido não concluída, por favor tente novamente!');\r\n            }\r\n            $state.go('pagamentoMP');\r\n          });\r\n\r\n        });\r\n      });\r\n    };\r\n\r\n    //region Informações do pagamento\r\n    var calcTotal = function () {\r\n      return vm.listaCompras.reduce(function (previousValue, obj) {\r\n        return previousValue + (obj.preco * obj.qnt);\r\n      }, 0);\r\n    };\r\n\r\n    vm.totalCarrinho = calcTotal();\r\n\r\n    vm.editarPagamento = function () {\r\n      vm.editarPagamentoFlag = !vm.editarPagamentoFlag;\r\n\r\n      apiService.setStorage('formaPagamento', vm.formaPagamento);\r\n\r\n      if (vm.editarPagamentoFlag && vm.formaPagamento.total) {\r\n        $timeout(function () {\r\n          var frete = 0;\r\n          if (vm.frete) {\r\n            frete = parseFloat(vm.cliente.freteValor.valor);\r\n          }\r\n          vm.totalCarrinhoFrete = angular.copy(vm.totalCarrinho) + frete;\r\n        });\r\n      }\r\n\r\n      if ((vm.formaPagamento.boleto) || (!vm.formaPagamento.boleto && vm.formaPagamento.aVista)) {\r\n        $timeout(function () {\r\n          vm.infoNeeded = false;\r\n          vm.dados.typeId = 'bolbradesco';\r\n          vm.tipoPagamento.map(function (obj) {\r\n            obj.active = obj.id === 'bolbradesco';\r\n          });\r\n        });\r\n      } else {\r\n        vm.infoNeeded = true;\r\n      }\r\n    };\r\n\r\n    var padLeft = function (nr, n, str) {\r\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\r\n    };\r\n\r\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\r\n    //endregion\r\n\r\n    //region Frete\r\n    var calcularFrete = function (cep) {\r\n      var dados = {\r\n        \"cep\": cep,\r\n        \"peso\": vm.listaCompras.reduce(function (carry, next) {\r\n          return carry + parseFloat(next.peso);\r\n        }, 0),\r\n        \"total\": calcTotal()\r\n      };\r\n      getFrete(dados);\r\n    };\r\n    var getFrete = function (dados) {\r\n      apiService\r\n        .post('frete', dados)\r\n        .then(function (res) {\r\n          apiService.setStorage('frete', res.result);\r\n          vm.frete = res.result;\r\n          vm.totalCarrinhoFrete = dados.total + parseFloat(res.result.valor);\r\n        });\r\n    };\r\n    //endregion\r\n\r\n    //region Gerar Select Pagamento\r\n    var comJurosAVista = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela0']) / 100)) + parseFloat(vm.cliente.freteValor.valor);\r\n    vm.listaPagamentos = [\r\n      {\r\n        \"index\": 90,\r\n        \"parcelas\": 0,\r\n        \"boleto\": true,\r\n        \"aVista\": true,\r\n        \"descricao\": 'Boleto | R$ ' + comJurosAVista.toFixed(2).replace('.', ','),\r\n        \"total\": comJurosAVista\r\n      },\r\n      {\r\n        \"index\": 0,\r\n        \"parcelas\": 0,\r\n        \"boleto\": false,\r\n        \"aVista\": true,\r\n        \"descricao\": 'À vista | R$ ' + comJurosAVista.toFixed(2).replace('.', ','),\r\n        \"total\": comJurosAVista\r\n      }\r\n    ];\r\n\r\n    var maxParcelas = root.temaStorage.max_parcelas;\r\n\r\n    for (var i = 1; i <= maxParcelas; i++) {\r\n      var comJuros = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela' + i]) / 100)) + parseFloat(vm.cliente.freteValor.valor);\r\n      var pagamento = {\r\n        \"index\": i + 1,\r\n        \"parcelas\": i,\r\n        \"boleto\": false,\r\n        \"aVista\": false,\r\n        \"descricao\": 'Cartão de crédito | ' + i + 'x de R$ ' + (comJuros / i).toFixed(2).replace('.', ','),\r\n        \"total\": comJuros\r\n      };\r\n\r\n      if (root.temaStorage['parcela' + i] == 0) {\r\n        pagamento.descricao += \" s/ juros\"\r\n      }\r\n\r\n      vm.listaPagamentos.push(pagamento);\r\n    }\r\n    //endregion\r\n\r\n    calcularFrete(vm.cliente.cep);\r\n  }\r\n\r\n})\r\n(angular);","(function (angular) {\r\n  \"use strict\";\r\n  angular.module('appToten')\r\n         .controller('categoriaController', categoriaController);\r\n\r\n  categoriaController.$inject = ['$scope', '$rootScope', 'apiService'];\r\n\r\n  function categoriaController($scope, $rootScope, apiService) {\r\n    var vm = $scope;\r\n    var root = $rootScope;\r\n\r\n    vm.categorias = [];\r\n\r\n    apiService.get('categorias').then(function (res) {\r\n      apiService.setStorage('categorias', res.result);\r\n      vm.categorias = res.result;\r\n    });\r\n\r\n  }\r\n\r\n})\r\n(angular);"]}
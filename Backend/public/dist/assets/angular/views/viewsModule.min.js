(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('loginController', loginController);

  loginController.$inject = ['$scope', '$rootScope', 'apiService', '$state'];

  function loginController($scope, $rootScope, apiService, $state) {
    var vm = $scope;
    var root = $rootScope;

    vm.login = function (dados) {
      apiService
        .token(dados)
        .then(function (res) {
          apiService.setStorage('auth', res);
          $state.go('home');
          
        }, function (err) {
          console.log(err);
        })
    }
  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('homeController', homeController);

  homeController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];

  function homeController($scope, $rootScope, apiService, $timeout) {
    var vm = $scope;
    var root = $rootScope;

  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('carrinhoController', carrinhoController);

  carrinhoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];

  function carrinhoController($scope, $rootScope, apiService, $timeout) {
    var vm = $scope;
    var root = $rootScope;

    vm.listaCompras = [].concat.apply([], new Array(15)).map(function (obj, i) {
      return {
        "qnt": 1,
        "price": 350.30 * (i + 1)
      };
    });

    var calcTotal = function () {
      vm.totalProdutos = vm.listaCompras.reduce(function (previousValue, obj) {
        return previousValue + (obj.price * obj.qnt);
      }, 0);
    };

    vm.removerItem = function (item) {
      vm.listaCompras = vm.listaCompras.filter(function (filtro) {
        console.log(filtro);
        return filtro.$$hashKey != item.$$hashKey;
      });

      calcTotal();
    };

    vm.calcTotalItem = function (item) {
      if (item.qnt.length == 0 || item.qnt == 0) {
        item.qnt = 0;

        vm.removerItem(item)
      }

      calcTotal();
    };

    vm.minus = function (item) {
      if (item.qnt - 1 < 0) {
        item.qnt = 0;
      } else {
        item.qnt -= 1;
      }

      if (item.qnt == 0) {
        vm.removerItem(item);
      }
      calcTotal();
    };

    vm.more = function (item) {
      item.qnt += 1;
      calcTotal();
    };

    calcTotal();
  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('fotoController', fotoController);

  fotoController.$inject = ['$scope', '$rootScope'];

  function fotoController($scope, $rootScope) {
    var vm = $scope;
    var root = $rootScope;

    var _video = null;

    vm.closeModal = function () {
      root.foto = false;
    };

    vm.okFoto = function () {
      vm.confirmFoto = true;
    };

    vm.notOkFoto = function () {
      vm.confirmFoto = false;
    };

    vm.patOpts = {
      x: 0,
      y: 0,
      w: 400,
      h: 400
    };

    // Setup a channel to receive a video property
    // with a reference to the video element
    // See the HTML binding in main.html
    vm.channel = {};

    vm.onError = function (err) {
      console.log(err);
    };

    vm.onSuccess = function () {
      _video = vm.channel.video;
      vm.$apply(function () {
        vm.patOpts.w = _video.width;
        vm.patOpts.h = _video.height;
      });
    };

    vm.makeSnapshot = function () {
      if (_video) {
        var patCanvas = document.querySelector('#snapshot');
        if (!patCanvas) return;
        var ctxPat = patCanvas.getContext('2d');

        var idata = getVideoData(vm.patOpts.x, vm.patOpts.y, vm.patOpts.w, vm.patOpts.h);
        ctxPat.putImageData(idata, 0, 0);

        vm.confirmFoto = true;

        vm.imgResponse = patCanvas.toDataURL();

      }
    };

    var getVideoData = function getVideoData(x, y, w, h) {
      var hiddenCanvas = document.createElement('canvas');

      console.log(_video.height);

      hiddenCanvas.width = _video.width;
      hiddenCanvas.height = _video.height;
      var ctx = hiddenCanvas.getContext('2d');
      ctx.drawImage(_video, 0, 0, _video.width, _video.height);
      return ctx.getImageData(x, y, w, h);
    };
  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('cadastroController', cadastroController);

  cadastroController.$inject = ['$scope', '$rootScope', 'apiService', 'latinizeService'];

  function cadastroController($scope, $rootScope, apiService, latinizeService) {
    var vm = $scope;
    var root = $rootScope;

    vm.dados = {};
    vm.dados.enderecoCerto = true ;
    vm.dados.outro = {} ;

    vm.listaCompras = [].concat.apply([], new Array(20)).map(function (obj, i) {
      return i;
    });

    vm.estados = cidadesEstados.estados.map(function (obj) {
      return {
        "sigla": obj.sigla,
        "nome": obj.nome
      };
    });

    vm.procuraCidades = function (uf) {
      vm.cidades = cidadesEstados.estados.filter(function (obj) {
        return obj.sigla === uf.sigla;
      })[0].cidades.map(function (obj) {
        return {
          "nome": obj,
          "cidade": latinizeService.latinize(obj.toUpperCase())
        };
      });
    };
    vm.consultarCEP = function (cep) {
      vm.loaderData = true;
      cep = cep.replace(/[^0-9]/g, '');

      apiService
        .cep(cep)
        .then(function (res) {
          vm.loaderData = false;
          console.log(res);

          if (res.status == 0) {
            vm.dados.tipoLogradouroConsumidor = res.retorno.tipoLogradouroConsumidor;
            vm.dados.logradouroConsumidor = res.retorno.logradouroConsumidor;
            vm.dados.UF = res.retorno.ufConsumidor;
            vm.dados.Cidade = res.retorno.cidadeConsumidor;
            vm.dados.Bairro = res.retorno.bairroConsumidor;
          } else {
            apiService.customMessage('Não conseguimos achar seu CEP em nossa base de dados, você o digitou certo?');
          }

        }, function (err) {
          vm.loaderData = false;
          apiService.errorCall(err, true);
        })
    };

  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('produtosController', produtosController);

  produtosController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];

  function produtosController($scope, $rootScope, apiService, $timeout) {
    var vm = $scope;
    var root = $rootScope;

    vm.produtos = [].concat.apply([], new Array(20)).map(function (obj, i) {
      return {
        "index": i
      };
    });

  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('produtoController', produtoController);

  produtoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];

  function produtoController($scope, $rootScope, apiService, $timeout) {
    var vm = $scope;
    var root = $rootScope;

    vm.qnt = 0;

    vm.minus = function () {
      if (vm.qnt - 1 < 0) {
        vm.qnt = 0;
      } else {
        vm.qnt -= 1;
      }

      if (vm.qnt == 0) {
        vm.removerItem(item);
      }
    };

    vm.more = function () {
      vm.qnt += 1;
    };

    vm.selectColor = function (item) {
      vm.cores.map(function (obj) {
        obj.selected = false;
      });

      item.selected = true;
    }

    vm.cores = [
      {
        "cor": "#EBD800",
        "selected": true
      },
      {
        "cor": "#000000",
        "selected": false
      },
      {
        "cor": "#F1F1F1",
        "selected": false
      }
    ]

  }

})
(angular);
(function (angular) {
  "use strict";
  angular.module('appToten')
         .controller('pagamentoController', pagamentoController);

  pagamentoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];

  function pagamentoController($scope, $rootScope, apiService, $timeout) {
    var vm = $scope;
    var root = $rootScope;

  }

})
(angular);
//# sourceMappingURL=../map/views/viewsModule.min.js.map

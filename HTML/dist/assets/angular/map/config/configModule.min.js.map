{"version":3,"sources":["config/Dependencias/autenticacaoInterceptor.js","config/Dependencias/errorInterceptor.js","config/Dependencias/interceptorsConfig.js","config/Dependencias/configValue.js","config/Dependencias/qSerial.js","config/Dependencias/routerFunction.js"],"names":["angular","autenticacaoInterceptor","$q","$state","$injector","request","requisicao","api","get","autorizacaoDados","getStorage","url","indexOf","access_token","headers","when","response","status","clearStorage","reject","module","factory","$inject","errorInterceptor","responseError","rejection","go","config","$httpProvider","interceptors","push","constant","baseUrl","apiToken","apiUrl","baseUrlDev","apiTokenDev","apiUrlDev","grant_type","client_id","client_secret","client_secret_dev","scope","dev","$provide","decorator","$delegate","serial","tasks","prevPromise","error","Error","forEach","task","key","nextPromise","success","fail","notify","then","data","ret","isPromiseLike","message","reason","obj","isFunction","routeFn","$stateProvider","$urlRouterProvider","localStorageServiceProvider","cfpLoadingBarProvider","includeSpinner","setPrefix","setStorageType","otherwise","state","templateUrl","controller"],"mappings":"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","file":"../../config/configModule.min.js","sourcesContent":["(function (angular) {\n  angular\n    .module(\"appToten\")\n    .factory('autenticacaoInterceptor', autenticacaoInterceptor);\n\n  autenticacaoInterceptor.$inject = ['$q', '$state', '$injector'];\n\n  function autenticacaoInterceptor($q, $state, $injector) {\n    return {\n      request: function (requisicao) {\n        var api = $injector.get('apiService');\n        var autorizacaoDados = api.getStorage('auth');\n        if (requisicao.url.indexOf('.html') === -1 && requisicao.url.indexOf(\"api\") > -1 && autorizacaoDados.access_token) {\n          requisicao.headers[\"Authorization\"] = \"Bearer \" + autorizacaoDados.access_token;\n        }\n\n        return requisicao || $q.when(requisicao);\n      },\n      response: function (response) {\n        if (response.status === 401) {\n          var api = $injector.get('apiService');\n          api.clearStorage();\n          return $q.reject(response);\n        }\n        if ([404, 500, 400].indexOf(response.status) > -1) {\n          return $q.reject(response);\n        }\n        return response || $q.when(response);\n      }\n    }\n  }\n\n})(angular);","(function (angular) {\n  angular\n    .module(\"appToten\")\n    .factory('errorInterceptor', errorInterceptor);\n\n  errorInterceptor.$inject = ['$q', '$state', '$injector'];\n  function errorInterceptor($q, $state, $injector) {\n    return {\n      responseError: function (rejection) {\n        if (rejection.status === 401) {\n          var api = $injector.get('apiService');\n          api.clearStorage();\n          $state.go(\"login\");\n        }\n        return $q.reject(rejection);\n      }\n    }\n  }\n\n})(angular);","//=require autenticacaoInterceptor.js\n//=require errorInterceptor.js\n\n(function (angular) {\n  angular\n    .module(\"appToten\")\n    .config([\n              '$httpProvider',\n              function ($httpProvider) {\n                $httpProvider.interceptors.push(\"autenticacaoInterceptor\");\n                $httpProvider.interceptors.push(\"errorInterceptor\");\n              }\n            ]);\n})(angular);\n\n","angular\n  .module(\"appToten\")\n  .constant(\"config\", {\n    \"baseUrl\": \"https://lojadalucy.com.br/\",\n    \"apiToken\": \"https://lojadalucy.com.br/oauth/token\",\n    \"apiUrl\": \"https://lojadalucy.com.br/api/\",\n    \"baseUrlDev\": \"https://lucyhome.dominioserver.com.br/\",\n    \"apiTokenDev\": \"https://lucyhome.dominioserver.com.br/oauth/token\",\n    \"apiUrlDev\": \"https://lucyhome.dominioserver.com.br/api/\",\n    \"grant_type\": \"password\",\n    \"client_id\": 3,\n    \"client_secret\": \"aw8AFIdfQ280GTnGjnJGHJGRc6lZpop1Pz3xhOj3\",\n    \"client_secret_dev\": \"jL2QXhoRxEkamNZsbMQWJa16cLdTlLOsA0EuJA18\",\n    \"scope\": \"*\",\n    \"dev\": true\n  });\n","angular\n  .module(\"appToten\")\n  .config([\n            \"$provide\",\n            function ($provide) {\n              $provide.decorator(\"$q\",\n                                 [\n                                   \"$delegate\",\n                                   function ($delegate) {\n                                     //Helper method copied from q.js.\n                                     var isPromiseLike = function (obj) { return obj && angular.isFunction(obj.then); }\n\n                                     /*\n                                      * @description Execute a collection of tasks serially.  A task is a function that returns a promise\n                                      *\n                                      * @param {Array.<Function>|Object.<Function>} tasks An array or hash of tasks.  A tasks is a function\n                                      *   that returns a promise.  You can also provide a collection of objects with a success tasks, failure task, and/or notify function\n                                      * @returns {Promise} Returns a single promise that will be resolved or rejected when the last task\n                                      *   has been resolved or rejected.\n                                      */\n                                     function serial(tasks) {\n                                       //Fake a \"previous task\" for our initial iteration\n                                       var prevPromise;\n                                       var error = new Error();\n                                       angular.forEach(tasks, function (task, key) {\n                                         var success = task.success || task;\n                                         var fail = task.fail;\n                                         var notify = task.notify;\n                                         var nextPromise;\n\n                                         //First task\n                                         if (!prevPromise) {\n                                           nextPromise = success();\n                                           if (!isPromiseLike(nextPromise)) {\n                                             error.message = \"Task \" + key + \" did not return a promise.\";\n                                             throw error;\n                                           }\n                                         } else {\n                                           //Wait until the previous promise has resolved or rejected to execute the next task\n                                           nextPromise = prevPromise.then(\n                                             /*success*/function (data) {\n                                               if (!success) { return data; }\n                                               var ret = success(data);\n                                               if (!isPromiseLike(ret)) {\n                                                 error.message = \"Task \" + key + \" did not return a promise.\";\n                                                 throw error;\n                                               }\n                                               return ret;\n                                             },\n                                             /*failure*/function (reason) {\n                                               if (!fail) { return $delegate.reject(reason); }\n                                               var ret = fail(reason);\n                                               if (!isPromiseLike(ret)) {\n                                                 error.message = \"Fail for task \" + key + \" did not return a promise.\";\n                                                 throw error;\n                                               }\n                                               return ret;\n                                             },\n                                             notify);\n                                         }\n                                         prevPromise = nextPromise;\n                                       });\n\n                                       return prevPromise || $delegate.when();\n                                     }\n\n                                     $delegate.serial = serial;\n                                     return $delegate;\n                                   }\n                                 ]);\n            }\n          ]);","(function () {\n  \"use strict\";\n\n  angular.module('appToten').config(routeFn);\n\n  routeFn.$inject = ['$stateProvider', '$urlRouterProvider', 'localStorageServiceProvider', 'cfpLoadingBarProvider'];\n\n  function routeFn($stateProvider, $urlRouterProvider, localStorageServiceProvider, cfpLoadingBarProvider) {\n    cfpLoadingBarProvider.includeSpinner = false;\n\n    localStorageServiceProvider\n      .setPrefix('appToten')\n      .setStorageType('sessionStorage');\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider\n      .state(\"erro\", {\n        url: \"/404\",\n        templateUrl: \"./views/404.html\"\n      })\n\n      .state(\"home\", {\n        url: \"/home\",\n        templateUrl: \"./views/home.html\"\n      })\n\n      .state(\"login\", {\n        url: \"/\",\n        templateUrl: \"./views/login.html\",\n        controller: \"loginController\"\n      })\n\n      .state(\"categorias\", {\n        url: \"/categorias\",\n        templateUrl: \"./views/categorias.html\",\n        controller: \"categoriaController\"\n      })\n\n      .state(\"carrinho\", {\n        url: \"/meuCarrinho\",\n        templateUrl: \"./views/carrinho.html\",\n        controller: \"carrinhoController\"\n      })\n\n      .state(\"cadastro\", {\n        url: \"/cadastro\",\n        templateUrl: \"./views/cadastro.html\",\n        controller: \"cadastroController\"\n      })\n\n      .state(\"produtos\", {\n        url: \"/produtos/:categoria\",\n        templateUrl: \"./views/produtos.html\",\n        controller: \"produtosController\"\n      })\n\n      .state(\"produto\", {\n        url: \"/produto/:id\",\n        templateUrl: \"./views/produto.html\",\n        controller: \"produtoController\"\n      })\n\n      .state(\"pagamento\", {\n        url: \"/pagamento\",\n        templateUrl: \"./views/pagamento.html\",\n        controller: \"pagamentoController\"\n      })\n\n      .state(\"pagamentoMP\", {\n        url: \"/pagamento/mp\",\n        templateUrl: \"./views/pagamento_mp.html\",\n        controller: \"pagamentoMpController\"\n      })\n\n      .state(\"finalizacao\", {\n        url: \"/finalizacao\",\n        templateUrl: \"./views/finalizacao.html\",\n        controller: \"finalizacaoController\"\n      });\n  }\n})(angular);\n"]}
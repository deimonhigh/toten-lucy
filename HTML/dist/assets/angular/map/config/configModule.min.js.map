{"version":3,"sources":["config/Dependencias/loadingInterceptor.js","config/Dependencias/interceptorsConfig.js","config/Dependencias/autenticacaoInterceptor.js","config/configModule.js","config/Dependencias/configValue.js","config/Dependencias/qSerial.js","config/Dependencias/routerFunction.js"],"names":[],"mappings":"CAAA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;CACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AD9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AEtzrJA;AACA","file":"../../config/configModule.min.js","sourcesContent":["angular\r\n  .module(\"appToten\")\r\n  .factory(\"loadingInterceptor\", loadingInterceptor);\r\n\r\nloadingInterceptor.$inject = ['$q', '$rootScope'];\r\n\r\nfunction loadingInterceptor($q, $rootScope) {\r\n  var loadingCount = 0;\r\n  return {\r\n    request: function (config) {\r\n      if (++loadingCount === 1) $rootScope.$broadcast('loading:progress');\r\n      return config || $q.when(config);\r\n    },\r\n\r\n    response: function (response) {\r\n      if (--loadingCount === 0) $rootScope.$broadcast('loading:finish');\r\n      return response || $q.when(response);\r\n    },\r\n\r\n    responseError: function (response) {\r\n      if (--loadingCount === 0) $rootScope.$broadcast('loading:finish');\r\n      return $q.reject(response);\r\n    }\r\n  };\r\n};","\r\n//=require loadingInterceptor.js\r\n//=require autenticacaoInterceptor.js\r\n\r\n(function (angular) {\r\n  angular\r\n    .module(\"appToten\")\r\n    .config([\r\n              '$httpProvider',\r\n              function ($httpProvider) {\r\n                $httpProvider.interceptors.push(\"autenticacaoInterceptor\");\r\n                $httpProvider.interceptors.push(\"loadingInterceptor\");\r\n              }\r\n            ]);\r\n})(angular);\r\n\r\n","angular\r\n  .module(\"appToten\")\r\n  .factory(\"autenticacaoInterceptor\", [\r\n    'localStorageService', 'config', 'base64Factory', function (localStorageService, config, base64Factory) {\r\n      return {\r\n        request: function (requisicao) {\r\n\r\n          try {\r\n\r\n            var storage = localStorageService.get('autenticacao');\r\n\r\n            if (\r\n              storage == null &&\r\n              ((requisicao.url.indexOf(\"apigopharma\") > -1 && requisicao.url.indexOf('token') == -1) || requisicao.url.indexOf('.html') > -1)\r\n            ) {\r\n              throw \"No token\"\r\n            }\r\n\r\n            var autorizacaoDados = JSON.parse(base64Factory.decode(storage));\r\n\r\n            if (autorizacaoDados) {\r\n              if (requisicao.url.indexOf(\"apigopharma\") > -1 && requisicao.url.indexOf('token') == -1) {\r\n                requisicao.headers[\"Authorization\"] = autorizacaoDados.token;\r\n              } else {\r\n                var diferencaMinutos = (new Date(autorizacaoDados.expires) - new Date());\r\n\r\n                if (diferencaMinutos <= 0) {\r\n                  location.reload();\r\n                }\r\n              }\r\n\r\n            }\r\n\r\n            return requisicao;\r\n\r\n          }\r\n          catch (e) {\r\n            if (requisicao.url.indexOf(\"apigopharma\") == -1) {\r\n              return requisicao;\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  ]);","//=require Dependencias/interceptorsConfig.js\r\n//=require Dependencias/configValue.js\r\n//=require Dependencias/qSerial.js\r\n//=require Dependencias/routerFunction.js\r\n","angular\r\n  .module(\"appToten\")\r\n  .constant(\"config\", {\r\n    \"apiUrl\": \"\"\r\n  });\r\n","angular\r\n  .module(\"appToten\")\r\n  .config([\r\n            \"$provide\",\r\n            function ($provide) {\r\n              $provide.decorator(\"$q\",\r\n                                 [\r\n                                   \"$delegate\",\r\n                                   function ($delegate) {\r\n                                     //Helper method copied from q.js.\r\n                                     var isPromiseLike = function (obj) { return obj && angular.isFunction(obj.then); }\r\n\r\n                                     /*\r\n                                      * @description Execute a collection of tasks serially.  A task is a function that returns a promise\r\n                                      *\r\n                                      * @param {Array.<Function>|Object.<Function>} tasks An array or hash of tasks.  A tasks is a function\r\n                                      *   that returns a promise.  You can also provide a collection of objects with a success tasks, failure task, and/or notify function\r\n                                      * @returns {Promise} Returns a single promise that will be resolved or rejected when the last task\r\n                                      *   has been resolved or rejected.\r\n                                      */\r\n                                     function serial(tasks) {\r\n                                       //Fake a \"previous task\" for our initial iteration\r\n                                       var prevPromise;\r\n                                       var error = new Error();\r\n                                       angular.forEach(tasks, function (task, key) {\r\n                                         var success = task.success || task;\r\n                                         var fail = task.fail;\r\n                                         var notify = task.notify;\r\n                                         var nextPromise;\r\n\r\n                                         //First task\r\n                                         if (!prevPromise) {\r\n                                           nextPromise = success();\r\n                                           if (!isPromiseLike(nextPromise)) {\r\n                                             error.message = \"Task \" + key + \" did not return a promise.\";\r\n                                             throw error;\r\n                                           }\r\n                                         } else {\r\n                                           //Wait until the previous promise has resolved or rejected to execute the next task\r\n                                           nextPromise = prevPromise.then(\r\n                                             /*success*/function (data) {\r\n                                               if (!success) { return data; }\r\n                                               var ret = success(data);\r\n                                               if (!isPromiseLike(ret)) {\r\n                                                 error.message = \"Task \" + key + \" did not return a promise.\";\r\n                                                 throw error;\r\n                                               }\r\n                                               return ret;\r\n                                             },\r\n                                             /*failure*/function (reason) {\r\n                                               if (!fail) { return $delegate.reject(reason); }\r\n                                               var ret = fail(reason);\r\n                                               if (!isPromiseLike(ret)) {\r\n                                                 error.message = \"Fail for task \" + key + \" did not return a promise.\";\r\n                                                 throw error;\r\n                                               }\r\n                                               return ret;\r\n                                             },\r\n                                             notify);\r\n                                         }\r\n                                         prevPromise = nextPromise;\r\n                                       });\r\n\r\n                                       return prevPromise || $delegate.when();\r\n                                     }\r\n\r\n                                     $delegate.serial = serial;\r\n                                     return $delegate;\r\n                                   }\r\n                                 ]);\r\n            }\r\n          ]);","(function () {\r\n  \"use strict\";\r\n\r\n  angular.module('appToten').config(routeFn);\r\n\r\n  routeFn.$inject = ['$stateProvider', '$urlRouterProvider', 'localStorageServiceProvider', 'cfpLoadingBarProvider'];\r\n\r\n  function routeFn($stateProvider, $urlRouterProvider, localStorageServiceProvider, cfpLoadingBarProvider) {\r\n\r\n    cfpLoadingBarProvider.includeSpinner = false;\r\n\r\n    localStorageServiceProvider\r\n      .setPrefix('appToten')\r\n      .setStorageType('localStorage');\r\n\r\n    $urlRouterProvider.otherwise('/');\r\n\r\n    $stateProvider\r\n      .state(\"erro\", {\r\n        url: \"/404\",\r\n        templateUrl: \"./views/404.html\"\r\n      })\r\n\r\n      .state(\"home\", {\r\n        url: \"/home\",\r\n        templateUrl: \"./views/home.html\",\r\n        controller: \"homeController\"\r\n      })\r\n\r\n      .state(\"login\", {\r\n        url: \"/\",\r\n        templateUrl: \"./views/login.html\",\r\n        controller: \"loginController\"\r\n      })\r\n\r\n      .state(\"categorias\", {\r\n        url: \"/categorias\",\r\n        templateUrl: \"./views/categorias.html\",\r\n        controller: \"loginController\"\r\n      })\r\n\r\n      .state(\"carrinho\", {\r\n        url: \"/meuCarrinho\",\r\n        templateUrl: \"./views/carrinho.html\",\r\n        controller: \"carrinhoController\"\r\n      })\r\n\r\n      .state(\"cadastro\", {\r\n        url: \"/cadastro\",\r\n        templateUrl: \"./views/cadastro.html\",\r\n        controller: \"cadastroController\"\r\n      })\r\n\r\n      .state(\"produtos\", {\r\n        url: \"/produtos\",\r\n        templateUrl: \"./views/produtos.html\",\r\n        controller: \"produtosController\"\r\n      })\r\n\r\n      .state(\"produto\", {\r\n        url: \"/produto\",\r\n        templateUrl: \"./views/produto.html\",\r\n        controller: \"produtoController\"\r\n      })\r\n\r\n      .state(\"pagamento\", {\r\n        url: \"/pagamento\",\r\n        templateUrl: \"./views/pagamento.html\",\r\n        controller: \"pagamentoController\"\r\n      })\r\n\r\n      .state(\"finalizacao\", {\r\n        url: \"/finalizacao\",\r\n        templateUrl: \"./views/finalizacao.html\",\r\n        controller: \"pagamentoController\"\r\n      })\r\n  }\r\n})(angular);\r\n"]}
{"version":3,"sources":["directive/Directives/cpfDirective.js","directive/Directives/telefoneDirective.js","directive/Directives/cartaoCreditoDirective.js","directive/Directives/cepDirective.js"],"names":["angular","cpf","$timeout","chooseValidation","value","length","validarCPF","validarCNPJ","setCaretPosition","el","selectionStart","selectionEnd","createTextRange","focus","range","collapse","select","chooseFormatter","toString","formatterCPF","formatterCNPJ","cnpj","replace","tamanho","numeros","substring","digitos","soma","pos","i","charAt","resultado","rev","add","parseInt","restrict","require","scope","ngModel","link","element","attrs","ngModelCtrl","$setValidity","$formatters","push","$parsers","transformedInput","$setViewValue","$render","$viewValue","module","directive","$inject","telefone","formatterDefault","formatterNoDdd","formatterGeral","maskTelefone","len","indexOf","substr","cartaoCredito","formatCartao","cep","formatter"],"mappings":"CAAA,SAAAA,GACA,YAMA,SAAAC,GAAAC,GAgDA,QAAAC,GAAAC,GACA,GAAAA,EACA,MAAAA,GAAAC,QAAA,GACAC,EAAAF,GAEAG,EAAAH,GAKA,QAAAI,GAAAC,GACA,GAAA,gBAAAA,GAAAC,eACAD,EAAAC,eAAAD,EAAAE,aAAAF,EAAAL,MAAAC,WACA,QAAA,KAAAI,EAAAG,gBAAA,CACAH,EAAAI,OACA,IAAAC,GAAAL,EAAAG,iBACAE,GAAAC,UAAA,GACAD,EAAAE,UAIA,QAAAC,GAAAb,GACA,GAAAA,EAGA,MAFAA,GAAAA,EAAAc,WAEAd,EAAAC,QAAA,GACAc,EAAAf,GAEAgB,EAAAhB,GAKA,QAAAG,GAAAc,GAGA,GAFAA,EAAAA,EAAAH,WAAAI,QAAA,UAAA,IAEA,IAAAD,EAAAhB,OAAA,OAAA,CAEA,IAAA,KAAAgB,EAAAhB,OACA,OAAA,CAGA,IAAA,kBAAAgB,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,GACA,kBAAAA,EACA,OAAA,CAQA,KAAA,GALAE,GAAAF,EAAAhB,OAAA,EACAmB,EAAAH,EAAAI,UAAA,EAAAF,GACAG,EAAAL,EAAAI,UAAAF,GACAI,EAAA,EACAC,EAAAL,EAAA,EACAM,EAAAN,EAAAM,GAAA,EAAAA,IACAF,GAAAH,EAAAM,OAAAP,EAAAM,GAAAD,IACAA,EAAA,IACAA,EAAA,EAGA,IAAAG,GAAAJ,EAAA,GAAA,EAAA,EAAA,GAAAA,EAAA,EACA,IAAAI,GAAAL,EAAAI,OAAA,GACA,OAAA,CAOA,KAJAP,GAAA,EACAC,EAAAH,EAAAI,UAAA,EAAAF,GACAI,EAAA,EACAC,EAAAL,EAAA,EACAM,EAAAN,EAAAM,GAAA,EAAAA,IACAF,GAAAH,EAAAM,OAAAP,EAAAM,GAAAD,IACAA,EAAA,IACAA,EAAA,EAIA,QADAG,EAAAJ,EAAA,GAAA,EAAA,EAAA,GAAAA,EAAA,KACAD,EAAAI,OAAA,GAGA,QAAAV,GAAAhB,GACA,GAAAA,EAMA,MALAA,GAAAA,EAAAkB,QAAA,MAAA,IACAlB,EAAAA,EAAAkB,QAAA,eAAA,SACAlB,EAAAA,EAAAkB,QAAA,wBAAA,YACAlB,EAAAA,EAAAkB,QAAA,gBAAA,UACAlB,EAAAA,EAAAkB,QAAA,cAAA,SAKA,QAAAhB,GAAAL,GACA,IAAAA,EACA,OAAA,CAGA,IADAA,EAAAA,EAAAiB,WAAAI,QAAA,WAAA,IACA,IAAArB,EAAAI,OAAA,OAAA,CACA,IAAA2B,EAEA,IAAA,KAAA/B,EAAAI,QACA,gBAAAJ,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,GACA,gBAAAA,EACA,OAAA,CAGA,KAAA,GADAgC,GAAA,EACAJ,EAAA,EAAAA,EAAA,EAAAA,IACAI,GAAAC,SAAAjC,EAAA6B,OAAAD,KAAA,GAAAA,EAMA,IAJAG,EAAA,GAAAC,EAAA,GACA,KAAAD,GAAA,KAAAA,IACAA,EAAA,GAEAA,IAAAE,SAAAjC,EAAA6B,OAAA,IACA,OAAA,CAEAG,GAAA,CACA,KAAA,GAAAJ,GAAA,EAAAA,EAAA,GAAAA,IACAI,GAAAC,SAAAjC,EAAA6B,OAAAD,KAAA,GAAAA,EAOA,OALAG,GAAA,GAAAC,EAAA,GACA,KAAAD,GAAA,KAAAA,IACAA,EAAA,GAGAA,IAAAE,SAAAjC,EAAA6B,OAAA,KAGA,QAAAX,GAAAf,GACA,GAAAA,EAMA,MALAA,GAAAA,EAAAkB,QAAA,UAAA,IACAlB,EAAAA,EAAAkB,QAAA,cAAA,SACAlB,EAAAA,EAAAkB,QAAA,cAAA,SACAlB,EAAAA,EAAAkB,QAAA,oBAAA,SAhMA,OACAa,SAAA,IACAC,QAAA,UACAC,OACAC,QAAA,YAEAC,KAAA,SAAAF,EAAAG,EAAAC,EAAAC,GACAA,EAAAC,aAAA,OAAA,GAEAD,EAAAE,YAAAC,KAAA,SAAAzC,GACA,MAAAa,GAAAb,KAGAsC,EAAAI,SAAAD,KAAA,SAAAzC,GACA,GAAAA,EAAA,CACA,GAAA2C,GAAA3C,EAAAc,WAAAI,QAAA,UAAA,IACAC,EAAAwB,EAAA1C,QAAA,GAAA,GAAA,EAWA,OATAH,GAAA,WACAwC,EAAAM,cAAA/B,EAAA8B,EAAAtB,UAAA,EAAAF,KACAmB,EAAAO,UAEAP,EAAAQ,YACA1C,EAAAgC,EAAA,GAAAE,EAAAQ,WAAA7C,UAIA0C,KAIAL,EAAAI,SAAAD,KAAA,SAAAzC,GAEA,GAAAA,EAAA,CAEA,MADAD,GAAAC,EAAAc,aAEAwB,EAAAC,aAAA,OAAA,GACAvC,OAEAsC,GAAAC,aAAA,OAAA,QA7CA3C,EAAAmD,OAAA,YACAC,UAAA,MAAAnD,GAEAA,EAAAoD,SAAA,aA2MArD,SAEA,SAAAA,GACA,YAMA,SAAAsD,GAAApD,GC3LA,QAAAM,GAAAC,GACA,GAAA,gBAAAA,GAAAC,eACAD,EAAAC,eAAAD,EAAAE,aAAAF,EAAAL,MAAAC,WACA,QAAA,KAAAI,EAAAG,gBAAA,CACAH,EAAAI,OACA,IAAAC,GAAAL,EAAAG,iBACAE,GAAAC,UAAA,GACAD,EAAAE,UAIA,QAAAuC,GAAAnD,GACA,GAAAA,EAKA,MAJAA,GAAAA,EAAAkB,QAAA,MAAA,IACAlB,EAAAA,EAAAkB,QAAA,gBAAA,WACAlB,EAAAA,EAAAkB,QAAA,eAAA,SAMA,QAAAkC,GAAApD,GACA,GAAAA,EAIA,MAHAA,GAAAA,EAAAkB,QAAA,MAAA,IACAlB,EAAAA,EAAAkB,QAAA,eAAA,SAMA,QAAAmC,GAAArD,GACA,GAAAA,EAKA,MAJAA,GAAAA,EAAAkB,QAAA,MAAA,IACAlB,EAAAA,EAAAkB,QAAA,eAAA,SACAlB,EAAAA,EAAAkB,QAAA,eAAA,SAMA,QAAAoC,GAAAtD,GACA,IAAAA,EAYA,MAAAA,EAXA,IAAAuD,GAAAvD,EAAAkB,QAAA,MAAA,IAAAjB,MAEA,OAAAsD,GAAA,GAAAA,GAAA,KAAA,GAAAvD,EAAAwD,QAAA,QACAL,EAAAnD,GACAuD,GAAA,EACAH,EAAApD,GAEA,IAAAuD,GAAAvD,EAAAwD,QAAA,SAAA,EACAH,EAAArD,OADA,GD2IA,OACA+B,SAAA,IACAC,QAAA,UC5NAC,OACAC,QAAA,YAEAC,KAAA,SAAAF,EAAAG,EAAAC,EAAAC,GACAA,EAAAE,YAAAC,KAAA,SAAAzC,GACA,MAAAA,GACAsD,EAAAtD,EAAAyD,OAAA,EAAA,KAEAzD,IAGAsC,EAAAI,SAAAD,KAAA,SAAAzC,GACA,GAAAA,EAAA,CACA,GAAA2C,GAAA3C,EAAAkB,QAAA,UAAA,GAWA,OAVApB,GAAA,WACAwC,EAAAQ,aACAhD,EAAA,WACAwC,EAAAM,cAAAU,EAAAX,EAAAtB,UAAA,EAAA,MACAiB,EAAAO,YAEAzC,EAAAgC,EAAA,GAAAE,EAAAQ,WAAA7C,WAIAD,EAAAkB,QAAA,UAAA,SD4LAtB,EAAAmD,OAAA,YACAC,UAAA,WAAAE,GAEAA,EAAAD,SAAA,aC/HArD,SAEA,SAAAA,GACA,YAMA,SAAA8D,GAAA5D,GCzDA,QAAAM,GAAAC,GACA,GAAA,gBAAAA,GAAAC,eACAD,EAAAC,eAAAD,EAAAE,aAAAF,EAAAL,MAAAC,WACA,QAAA,KAAAI,EAAAG,gBAAA,CACAH,EAAAI,OACA,IAAAC,GAAAL,EAAAG,iBACAE,GAAAC,UAAA,GACAD,EAAAE,UAIA,QAAA+C,GAAA3D,GACA,GAAAA,EAKA,MAJAA,GAAAA,EAAAkB,QAAA,MAAA,IACAlB,EAAAA,EAAAkB,QAAA,gBAAA,SACAlB,EAAAA,EAAAkB,QAAA,yBAAA,YACAlB,EAAAA,EAAAkB,QAAA,kCAAA,eD0CA,OACAa,SAAA,IACAC,QAAA,UCpGAC,OACAC,QAAA,YAEAC,KAAA,SAAAF,EAAAG,EAAAC,EAAAC,GACAA,EAAAC,aAAA,iBAAA,GAEAD,EAAAE,YAAAC,KAAA,SAAAzC,GACA,MAAA2D,GAAA3D,KAGAsC,EAAAI,SAAAD,KAAA,SAAAzC,GACA,GAAAA,EAAA,CACA,GAAA2C,GAAA3C,EAAAc,WAAAI,QAAA,UAAA,GAUA,OATApB,GAAA,WACAwC,EAAAM,cAAAe,EAAAhB,EAAAtB,UAAA,EAAA,MACAiB,EAAAO,UAEAP,EAAAQ,YACA1C,EAAAgC,EAAA,GAAAE,EAAAQ,WAAA7C,UAIA0C,KAIAL,EAAAI,SAAAD,KAAA,SAAAzC,GACA,GAAAA,EACA,MAAAA,GAAAc,WAAAI,QAAA,MAAA,IAAAjB,QAAA,IACAqC,EAAAC,aAAA,iBAAA,GACAvC,OAEAsC,GAAAC,aAAA,iBAAA,OD4DA3C,EAAAmD,OAAA,YACAC,UAAA,gBAAAU,GAEAA,EAAAT,SAAA,aChCArD,SAEA,SAAAA,GACA,YAMA,SAAAgE,GAAA9D,GC9CA,QAAAM,GAAAC,GACA,GAAA,gBAAAA,GAAAC,eACAD,EAAAC,eAAAD,EAAAE,aAAAF,EAAAL,MAAAC,WACA,QAAA,KAAAI,EAAAG,gBAAA,CACAH,EAAAI,OACA,IAAAC,GAAAL,EAAAG,iBACAE,GAAAC,UAAA,GACAD,EAAAE,UAIA,QAAAiD,GAAA7D,GACA,GAAAA,EAGA,MAFAA,GAAAA,EAAAc,WAAAI,QAAA,KAAA,IACAlB,EAAAA,EAAAkB,QAAA,eAAA,SDiCA,OACAa,SAAA,IACAC,QAAA,UACAC,OACAC,QAAA,YC7EAC,KAAA,SAAAF,EAAAG,EAAAC,EAAAC,GAEAA,EAAAE,YAAAC,KAAA,SAAAzC,GACA,MAAA6D,GAAA7D,KAGAsC,EAAAI,SAAAD,KAAA,SAAAzC,GACA,GAAAA,EAAA,CACA,GAAA2C,GAAA3C,EAAAkB,QAAA,UAAA,GAYA,OAXApB,GAAA,WACAwC,EAAAM,cAAAiB,EAAAlB,EAAAtB,UAAA,EAAA,KACAiB,EAAAO,YAGA/C,EAAA,WACAwC,EAAAQ,YACA1C,EAAAgC,EAAA,GAAAE,EAAAQ,WAAA7C,UAIAD,EAAAkB,QAAA,UAAA,SD+CAtB,EAAAmD,OAAA,YACAC,UAAA,MAAAY,GAEAA,EAAAX,SAAA,aCvBArD","file":"../../directive/directiveModule.min.js","sourcesContent":["(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .directive('cpf', cpf);\n\n  cpf.$inject = ['$timeout'];\n\n  function cpf($timeout) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        ngModel: '=ngModel'\n      },\n      link: function (scope, element, attrs, ngModelCtrl) {\n        ngModelCtrl.$setValidity('cpf', true);\n\n        ngModelCtrl.$formatters.push(function (value) {\n          return chooseFormatter(value);\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n          if (value) {\n            var transformedInput = value.toString().replace(/[^0-9]/g, '');\n            var tamanho = transformedInput.length <= 11 ? 11 : 14;\n\n            $timeout(function () {\n              ngModelCtrl.$setViewValue(chooseFormatter(transformedInput.substring(0, tamanho)));\n              ngModelCtrl.$render();\n\n              if (ngModelCtrl.$viewValue) {\n                setCaretPosition(element[0], ngModelCtrl.$viewValue.length);\n              }\n            });\n\n            return transformedInput;\n          }\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n\n          if (value) {\n            var cond = chooseValidation(value.toString());\n            if (cond) {\n              ngModelCtrl.$setValidity('cpf', true);\n              return value;\n            } else {\n              ngModelCtrl.$setValidity('cpf', false);\n              return undefined;\n            }\n          }\n        });\n      }\n    };\n\n    function chooseValidation(value) {\n      if (value) {\n        if (value.length <= 11) {\n          return validarCPF(value);\n        } else {\n          return validarCNPJ(value);\n        }\n      }\n    }\n\n    function setCaretPosition(el) {\n      if (typeof el.selectionStart == \"number\") {\n        el.selectionStart = el.selectionEnd = el.value.length;\n      } else if (typeof el.createTextRange != \"undefined\") {\n        el.focus();\n        var range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n      }\n    }\n\n    function chooseFormatter(value) {\n      if (value) {\n        value = value.toString();\n\n        if (value.length <= 11) {\n          return formatterCPF(value);\n        } else {\n          return formatterCNPJ(value);\n        }\n      }\n    }\n\n    //region CNPJ\n    function validarCNPJ(cnpj) {\n      cnpj = cnpj.toString().replace(/[^\\d]+/g, '');\n\n      if (cnpj.length === 0) return false;\n\n      if (cnpj.length !== 14) {\n        return false;\n      }\n\n      // Elimina CNPJs invalidos conhecidos\n      if (cnpj == \"00000000000000\" ||\n          cnpj == \"11111111111111\" ||\n          cnpj == \"22222222222222\" ||\n          cnpj == \"33333333333333\" ||\n          cnpj == \"44444444444444\" ||\n          cnpj == \"55555555555555\" ||\n          cnpj == \"66666666666666\" ||\n          cnpj == \"77777777777777\" ||\n          cnpj == \"88888888888888\" ||\n          cnpj == \"99999999999999\") {\n        return false;\n      }\n\n      // Valida DVs\n      var tamanho = cnpj.length - 2;\n      var numeros = cnpj.substring(0, tamanho);\n      var digitos = cnpj.substring(tamanho);\n      var soma = 0;\n      var pos = tamanho - 7;\n      for (var i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) {\n          pos = 9;\n        }\n      }\n      var resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n      if (resultado != digitos.charAt(0)) {\n        return false;\n      }\n\n      tamanho = tamanho + 1;\n      numeros = cnpj.substring(0, tamanho);\n      soma = 0;\n      pos = tamanho - 7;\n      for (i = tamanho; i >= 1; i--) {\n        soma += numeros.charAt(tamanho - i) * pos--;\n        if (pos < 2) {\n          pos = 9;\n        }\n      }\n      resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;\n      return resultado == digitos.charAt(1);\n    }\n\n    function formatterCNPJ(value) {\n      if (value) {\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/^(\\d{2})(\\d)/, \"$1.$2\");\n        value = value.replace(/^(\\d{2})\\.(\\d{3})(\\d)/, \"$1.$2.$3\");\n        value = value.replace(/\\.(\\d{3})(\\d)/, \".$1/$2\");\n        value = value.replace(/(\\d{4})(\\d)/, \"$1-$2\");\n        return value;\n      }\n    }\n\n    //endregion\n\n    //region CPF\n    function validarCPF(cpf) {\n      if (!cpf) {\n        return false;\n      }\n      cpf = cpf.toString().replace(/[^0-9]+/g, '');\n      if (cpf.length === 0) return false;\n      var rev;\n\n      // Elimina CPFs invalidos conhecidos\n      if (cpf.length !== 11 ||\n          cpf === \"00000000000\" ||\n          cpf === \"11111111111\" ||\n          cpf === \"22222222222\" ||\n          cpf === \"33333333333\" ||\n          cpf === \"44444444444\" ||\n          cpf === \"55555555555\" ||\n          cpf === \"66666666666\" ||\n          cpf === \"77777777777\" ||\n          cpf === \"88888888888\" ||\n          cpf === \"99999999999\") {\n        return false;\n      }\n      // Valida 1o digito\n      var add = 0;\n      for (var i = 0; i < 9; i++) {\n        add += parseInt(cpf.charAt(i)) * (10 - i);\n      }\n      rev = 11 - (add % 11);\n      if (rev === 10 || rev === 11) {\n        rev = 0;\n      }\n      if (rev !== parseInt(cpf.charAt(9))) {\n        return false;\n      }\n      // Valida 2o digito\n      add = 0;\n      for (var i = 0; i < 10; i++) {\n        add += parseInt(cpf.charAt(i)) * (11 - i);\n      }\n      rev = 11 - (add % 11);\n      if (rev === 10 || rev === 11) {\n        rev = 0;\n      }\n\n      return rev === parseInt(cpf.charAt(10));\n    }\n\n    function formatterCPF(value) {\n      if (value) {\n        value = value.replace(/[^0-9]/g, \"\");\n        value = value.replace(/(\\d{3})(\\d)/, \"$1.$2\");\n        value = value.replace(/(\\d{3})(\\d)/, \"$1.$2\");\n        value = value.replace(/(\\d{3})(\\d{1,2})$/, \"$1-$2\");\n\n        return value;\n      }\n    }\n\n    //endregion\n\n  }\n\n})(angular);\n","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .directive('telefone', telefone);\n\n  telefone.$inject = ['$timeout'];\n\n  function telefone($timeout) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        ngModel: '=ngModel'\n      },\n      link: function (scope, element, attrs, ngModelCtrl) {\n        ngModelCtrl.$formatters.push(function (value) {\n          if (value) {\n            return maskTelefone(value.substr(0, 11));\n          }\n          return value;\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n          if (value) {\n            var transformedInput = value.replace(/[^0-9]/g, '');\n            $timeout(function () {\n              if (ngModelCtrl.$viewValue) {\n                $timeout(function () {\n                  ngModelCtrl.$setViewValue(maskTelefone(transformedInput.substring(0, 11)));\n                  ngModelCtrl.$render();\n                });\n                setCaretPosition(element[0], ngModelCtrl.$viewValue.length);\n              }\n            });\n\n            return value.replace(/[^0-9]/g, \"\");\n          }\n        });\n      }\n    };\n\n    function setCaretPosition(el) {\n      if (typeof el.selectionStart == \"number\") {\n        el.selectionStart = el.selectionEnd = el.value.length;\n      } else if (typeof el.createTextRange != \"undefined\") {\n        el.focus();\n        var range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n      }\n    }\n\n    function formatterDefault(value) {\n      if (value) {\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/^(\\d{2})(\\d)/g, \"($1) $2\");\n        value = value.replace(/(\\d)(\\d{4})$/, \"$1-$2\");\n\n        return value;\n      }\n    }\n\n    function formatterNoDdd(value) {\n      if (value) {\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/(\\d)(\\d{4})$/, \"$1-$2\");\n\n        return value;\n      }\n    }\n\n    function formatterGeral(value) {\n      if (value) {\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/^(\\d{4})(\\d)/, \"$1-$2\");\n        value = value.replace(/(\\d)(\\d{4})$/, \"$1-$2\");\n\n        return value;\n      }\n    }\n\n    function maskTelefone(value) {\n      if (value) {\n        var len = value.replace(/\\D/g, \"\").length;\n\n        if (len > 9 && len <= 11 && value.indexOf('0800') == -1) {\n          return formatterDefault(value);\n        } else if (len <= 9) {\n          return formatterNoDdd(value);\n        }\n        if (len == 11 && value.indexOf('0800') > -1) {\n          return formatterGeral(value);\n        }\n      } else {\n        return value\n      }\n    }\n  }\n\n})(angular);\n","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .directive('cartaoCredito', cartaoCredito);\n\n  cartaoCredito.$inject = ['$timeout'];\n\n  function cartaoCredito($timeout) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        ngModel: '=ngModel'\n      },\n      link: function (scope, element, attrs, ngModelCtrl) {\n        ngModelCtrl.$setValidity('cartaoCredito', true);\n\n        ngModelCtrl.$formatters.push(function (value) {\n          return formatCartao(value);\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n          if (value) {\n            var transformedInput = value.toString().replace(/[^0-9]/g, '');\n            $timeout(function () {\n              ngModelCtrl.$setViewValue(formatCartao(transformedInput.substring(0, 16)));\n              ngModelCtrl.$render();\n\n              if (ngModelCtrl.$viewValue) {\n                setCaretPosition(element[0], ngModelCtrl.$viewValue.length);\n              }\n            });\n\n            return transformedInput;\n          }\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n          if (value) {\n            if (value.toString().replace(/\\s/g, '').length >= 14) {\n              ngModelCtrl.$setValidity('cartaoCredito', true);\n              return value;\n            } else {\n              ngModelCtrl.$setValidity('cartaoCredito', false);\n              return;\n            }\n          }\n        });\n      }\n    };\n\n    function setCaretPosition(el) {\n      if (typeof el.selectionStart == \"number\") {\n        el.selectionStart = el.selectionEnd = el.value.length;\n      } else if (typeof el.createTextRange != \"undefined\") {\n        el.focus();\n        var range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n      }\n    }\n\n    //region Cartao Credito\n    function formatCartao(value) {\n      if (value) {\n        value = value.replace(/\\D/g, \"\");\n        value = value.replace(/^(\\d{4})(\\d)/g, \"$1 $2\");\n        value = value.replace(/^(\\d{4})\\s(\\d{4})(\\d)/g, \"$1 $2 $3\");\n        value = value.replace(/^(\\d{4})\\s(\\d{4})\\s(\\d{4})(\\d)/g, \"$1 $2 $3 $4\");\n        return value;\n      }\n    }\n\n    //endregion\n\n  }\n\n})(angular);\n","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .directive('cep', cep);\n\n  cep.$inject = ['$timeout'];\n\n  function cep($timeout) {\n    return {\n      restrict: 'A',\n      require: 'ngModel',\n      scope: {\n        ngModel: '=ngModel'\n      },\n      link: function (scope, element, attrs, ngModelCtrl) {\n\n        ngModelCtrl.$formatters.push(function (value) {\n          return formatter(value);\n        });\n\n        ngModelCtrl.$parsers.push(function (value) {\n          if (value) {\n            var transformedInput = value.replace(/[^0-9]/g, '');\n            $timeout(function () {\n              ngModelCtrl.$setViewValue(formatter(transformedInput.substring(0, 8)));\n              ngModelCtrl.$render();\n            });\n\n            $timeout(function () {\n              if (ngModelCtrl.$viewValue) {\n                setCaretPosition(element[0], ngModelCtrl.$viewValue.length);\n              }\n            });\n\n            return value.replace(/[^0-9]/g, \"\");\n          }\n        });\n      }\n    };\n\n    function setCaretPosition(el) {\n      if (typeof el.selectionStart == \"number\") {\n        el.selectionStart = el.selectionEnd = el.value.length;\n      } else if (typeof el.createTextRange != \"undefined\") {\n        el.focus();\n        var range = el.createTextRange();\n        range.collapse(false);\n        range.select();\n      }\n    }\n\n    function formatter(value) {\n      if (value) {\n        value = value.toString().replace(/D/g, \"\");\n        value = value.replace(/^(\\d{5})(\\d)/, \"$1-$2\");\n        return value;\n      }\n    }\n\n  }\n\n})(angular);\n"]}
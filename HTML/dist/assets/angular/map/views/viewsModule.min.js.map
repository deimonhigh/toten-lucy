{"version":3,"sources":["views/Controllers/loginController.js","views/Controllers/carrinhoController.js","views/Controllers/fotoController.js","views/Controllers/cadastroController.js","views/Controllers/produtosController.js","views/Controllers/produtoController.js","views/Controllers/finalizacaoController.js","views/Controllers/pagamentoController.js","views/Controllers/pagamentoMpController.js"],"names":["angular","loginController","$scope","$rootScope","apiService","root","login","dados","token","then","res","error","alert","email","user","setStorage","loadConfig","module","controller","$inject","carrinhoController","$timeout","vm","totalProdutosFrete","totalProdutos","cep","result","show","listaCompras","getStorage","calcTotal","reduce","previousValue","obj","preco","qnt","copy","parseFloat","valor","removerItem","item","filter","filtro","codigobarras","calcTotalItem","minus","helperCarrinho","more","length","carrinho","map","push","limparCarrinho","delStorage","itensCarrinho","calcularFrete","local","uf","localidade","parseInt","peso","carry","next","getFrete","post","prazo","fotoController","hideButtonComprovante","_video","bandeiras","id","descricao","comprovanteBase","bandeira","codigo","comprovantes","removeItem","$$hashKey","addComprovante","closeModal","foto","confirmFoto","$broadcast","err","okFoto","notOkFoto","patOpts","x","y","w","h","channel","onError","console","log","onSuccess","video","$apply","width","height","makeSnapshot","patCanvas","document","querySelector","ctxPat","getContext","idata","getVideoData","putImageData","imgResponse","toDataURL","hiddenCanvas","createElement","ctx","drawImage","getImageData","cadastroController","latinizeService","$filter","$state","enviarParaSalvar","documento","nome","telefone","celular","enderecos","enderecoCerto","sexo","outro","estados","cidadesEstados","sigla","$watch","nVal","procuraCidades","cidades","cidade","latinize","toUpperCase","procuraCidadesOutro","cidadesOutro","$on","cidadeTemp","temp","cidadeTempOutro","tempOutro","procurarCliente","cpf","search","numero","endereco","bairro","enderecooriginal","salvarDados","enviar","endereco1","enderecoOriginal","endereco2","temaStorage","mercado_pago","go","limpaEndereco","limpaOutroEndereco","procuraCep","logradouro","procuraOutroCep","produtosController","$stateParams","categoria","maxParcelas","max_parcelas","menuActive","loading","categorias","produtoActive","produtos","categoriasItem","itensDoFiltro","codigocategoria","itens","listaPreco","precopromocao","comJuros","toFixed","produtoController","produtosRelacionados","produto","get","imagemGrande","imagens","semJuros","parcela0","produtocodigo","codigoproduto","selectColor","cores","selected","changeImg","addCarrinho","finalizacaoController","dadosVendedor","formaPagamento","editarPagamentoFlag","cliente","formaPagamentoStorage","comprovante","frete","boleto","hideComprovante","showBoleto","totalCarrinho","totalCarrinhoFrete","mp","freteValor","idPedido","nr","n","str","Array","String","join","replace","limparSessao","pagamentoController","validarVendedor","identificacao","senha","openFoto","editarPagamento","total","auth","vendedor","send","idcliente","totalSemJuros","img","produto_id","vendedor_id","parcelas","aVista","code","comJurosAVista","listaPagamentos","index","i","pagamento","pagamentoMpController","mercadoPago","cfpLoadingBar","type","okCartaoCredito","infoNeeded","tipoPagamento","getPaymentsMethods","response","mesValidade","apply","_","name","mes","anoAtual","Date","getFullYear","anoValidade","ano","validaCartao","cartao","toString","getBin","status","active","typeId","salvarPagamento","start","getIdTypes","mPago","clearSession","form","getElementById","createToken","complete","method","msg","categoriaController"],"mappings":"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","file":"../../views/viewsModule.min.js","sourcesContent":["(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('loginController', loginController);\n\n  loginController.$inject = ['$scope', '$rootScope', 'apiService'];\n\n  function loginController($scope, $rootScope, apiService) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    vm.login = function (dados) {\n      apiService\n        .token(dados)\n        .then(function (res) {\n          if (res.error) {\n            alert('Usuário ou senha inválidos.');\n            return;\n          }\n          res.email = dados.user;\n          apiService.setStorage('auth', res);\n          root.loadConfig(dados.user, true);\n        }, function () {\n          alert('Usuário ou senha inválidos.')\n        });\n    };\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('carrinhoController', carrinhoController);\n\n  carrinhoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];\n\n  function carrinhoController($scope, $rootScope, apiService, $timeout) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    vm.totalProdutosFrete = 0;\n    vm.totalProdutos = 0;\n    vm.cep = \"\";\n\n    vm.result = {\n      \"show\": false\n    };\n\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\n\n    //region Carrinho\n    var calcTotal = function () {\n      vm.totalProdutos = vm.listaCompras.reduce(function (previousValue, obj) {\n        return previousValue + (obj.preco * obj.qnt);\n      }, 0);\n\n      if (vm.result.show) {\n        vm.totalProdutosFrete = angular.copy(vm.totalProdutos) + parseFloat(vm.result.valor);\n      } else {\n        vm.totalProdutosFrete = angular.copy(vm.totalProdutos);\n      }\n\n    };\n\n    vm.removerItem = function (item) {\n      vm.listaCompras = vm.listaCompras.filter(function (filtro) {\n        return filtro.codigobarras !== item.codigobarras;\n      });\n\n      apiService.setStorage('carrinho', vm.listaCompras);\n\n      calcTotal();\n    };\n\n    vm.calcTotalItem = function (item) {\n      if (item.qnt === 0) {\n        vm.removerItem(item)\n      }\n\n      calcTotal();\n    };\n\n    vm.minus = function (item) {\n      if (item.qnt - 1 < 0) {\n        item.qnt = 0;\n      } else {\n        item.qnt -= 1;\n      }\n\n      if (item.qnt === 0) {\n        $timeout(function () { vm.removerItem(item); });\n      } else {\n        helperCarrinho(item, item.qnt);\n      }\n\n      calcTotal();\n    };\n\n    vm.more = function (item) {\n      item.qnt += 1;\n      helperCarrinho(item, item.qnt);\n      calcTotal();\n    };\n\n    var helperCarrinho = function (item, qnt) {\n      var exist = vm.listaCompras.filter(function (obj) {\n        return obj.codigobarras === item.codigobarras;\n      });\n\n      if (exist.length > 0) {\n        vm.carrinho = vm.listaCompras.map(function (obj) {\n          if (obj.codigobarras === item.codigobarras) {\n            obj.qnt = qnt;\n          }\n          return obj;\n        });\n        apiService.setStorage('carrinho', vm.listaCompras);\n      } else {\n        item.qnt = qnt;\n        vm.listaCompras.push(item);\n        apiService.setStorage('carrinho', vm.listaCompras);\n      }\n    };\n\n    vm.limparCarrinho = function () {\n      apiService.delStorage('carrinho');\n      root.itensCarrinho = 0;\n      vm.listaCompras = [];\n      calcTotal();\n    };\n    //endregion\n\n    vm.calcularFrete = function () {\n      apiService.cep(vm.cep).then(function (res) {\n        vm.result.local = res.uf + ' - ' + res.localidade;\n\n        var dados = {\n          \"cep\": parseInt(vm.cep),\n          \"peso\": vm.listaCompras.reduce(function (carry, next) {\n            return carry + parseFloat(next.peso);\n          }, 0)\n        };\n\n        getFrete(dados);\n      }, function () {\n        alert('CEP não encontrado em nossa base.');\n      });\n    };\n\n    var getFrete = function (dados) {\n      apiService\n        .post('frete', dados)\n        .then(function (res) {\n          vm.result.valor = res.result.valor;\n          vm.result.prazo = res.result.prazo;\n          vm.result.show = true;\n\n          vm.totalProdutosFrete = angular.copy(vm.totalProdutos) + parseFloat(res.result.valor);\n        }, function () {\n          alert('CEP não encontrado em nossa base.');\n        });\n    };\n\n    calcTotal();\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('fotoController', fotoController);\n\n  fotoController.$inject = ['$scope', '$rootScope', 'apiService', '$timeout'];\n\n  function fotoController($scope, $rootScope, apiService, $timeout) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    vm.hideButtonComprovante = false;\n\n    var _video = null;\n\n    vm.bandeiras = [\n      {\n        \"id\": \"aVista\",\n        \"descricao\": \"À vista\"\n      },\n      {\n        \"id\": \"Visa\",\n        \"descricao\": \"Visa\"\n      },\n      {\n        \"id\": \"Mastercard\",\n        \"descricao\": \"Mastercard\"\n      },\n      {\n        \"id\": \"Hipercard\",\n        \"descricao\": \"Hipercard\"\n      },\n      {\n        \"id\": \"American Express\",\n        \"descricao\": \"American Express\"\n      },\n      {\n        \"id\": \"Diners\",\n        \"descricao\": \"Diners\"\n      },\n      {\n        \"id\": \"Elo\",\n        \"descricao\": \"Elo\"\n      }\n    ];\n\n    var comprovanteBase = {\n      \"bandeira\": null,\n      \"codigo\": null\n    };\n\n    vm.comprovantes = [\n      angular.copy(comprovanteBase)\n    ];\n\n    vm.removeItem = function (item) {\n      vm.comprovantes = vm.comprovantes.filter(function (obj) {\n        return obj.$$hashKey != item.$$hashKey;\n      });\n      vm.hideButtonComprovante = vm.comprovantes.length > 4;\n    };\n\n    vm.addComprovante = function () {\n      if (vm.comprovantes.length < 5) {\n        vm.comprovantes.push(angular.copy(comprovanteBase));\n      }\n      vm.hideButtonComprovante = vm.comprovantes.length > 4;\n    };\n\n    vm.closeModal = function () {\n      apiService.setStorage('comprovanteCodigos', vm.comprovantes);\n      apiService.post('pedidos/checarComprovantes', vm.comprovantes).then(function (res) {\n        root.foto = false;\n        vm.confirmFoto = false;\n        root.$broadcast('confirmarImg');\n        vm.comprovantes = [\n          angular.copy(comprovanteBase)\n        ];\n      }, function (err) {\n        err.error.bandeira = (err.error.bandeira == 'aVista') ? 'Á vista' : err.error.bandeira;\n        alert('O comprovante da bandeira \\'' + err.error.bandeira + '\\' e código \\'' + err.error.codigo + '\\' já existe em nossa base.');\n      });\n    };\n\n    vm.okFoto = function () {\n      vm.confirmFoto = true;\n    };\n\n    vm.notOkFoto = function () {\n      vm.confirmFoto = false;\n    };\n\n    vm.patOpts = {\n      x: 0,\n      y: 0,\n      w: 600,\n      h: 540\n    };\n\n    vm.channel = {};\n\n    vm.onError = function (err) {\n      console.log(err);\n    };\n\n    vm.onSuccess = function () {\n      _video = vm.channel.video;\n      vm.$apply(function () {\n        vm.patOpts.w = _video.width;\n        vm.patOpts.h = _video.height;\n      });\n    };\n\n    vm.makeSnapshot = function () {\n      if (_video) {\n        var patCanvas = document.querySelector('#snapshot');\n        if (!patCanvas) return;\n        var ctxPat = patCanvas.getContext('2d');\n\n        var idata = getVideoData(vm.patOpts.x, vm.patOpts.y, vm.patOpts.w, vm.patOpts.h);\n        ctxPat.putImageData(idata, 0, 0);\n\n        vm.confirmFoto = true;\n\n        vm.imgResponse = patCanvas.toDataURL();\n        apiService.setStorage('comprovante', vm.imgResponse);\n      }\n    };\n\n    var getVideoData = function getVideoData(x, y, w, h) {\n      var hiddenCanvas = document.createElement('canvas');\n\n      hiddenCanvas.width = _video.width;\n      hiddenCanvas.height = _video.height;\n      var ctx = hiddenCanvas.getContext('2d');\n      ctx.drawImage(_video, 0, 0, _video.width, _video.height);\n      return ctx.getImageData(x, y, w, h);\n    };\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('cadastroController', cadastroController);\n\n  cadastroController.$inject = ['$scope', '$rootScope', 'apiService', 'latinizeService', '$filter', '$state'];\n\n  function cadastroController($scope, $rootScope, apiService, latinizeService, $filter, $state) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    var enviarParaSalvar = {\n      \"id\": null,\n      \"documento\": null,\n      \"nome\": null,\n      \"telefone\": null,\n      \"celular\": null,\n      \"enderecos\": [],\n    };\n\n    vm.dados = {};\n    vm.dados.enderecoCerto = true;\n    vm.dados.sexo = \"M\";\n    vm.dados.outro = {};\n\n    vm.estados = cidadesEstados.estados.map(function (obj) {\n      return {\n        \"sigla\": obj.sigla,\n        \"nome\": obj.nome\n      };\n    });\n\n    //region Procura Cidades\n    vm.$watch(function ($scope) {\n      return $scope.dados.uf;\n    }, function (nVal) {\n      if (nVal) {\n        vm.procuraCidades(nVal);\n      }\n    });\n\n    vm.procuraCidades = function (uf) {\n      vm.cidades = cidadesEstados.estados.filter(function (obj) {\n        return obj.sigla === uf.sigla;\n      })[0].cidades.map(function (obj) {\n        return {\n          \"nome\": obj,\n          \"cidade\": latinizeService.latinize(obj.toUpperCase())\n        };\n      });\n\n      root.$broadcast('cidadeLoaded');\n    };\n\n    vm.$watch(function ($scope) {\n      return $scope.dados.outro.uf;\n    }, function (nVal) {\n      if (nVal) {\n        vm.procuraCidadesOutro(nVal);\n      }\n    });\n\n    vm.procuraCidadesOutro = function (uf) {\n      vm.cidadesOutro = cidadesEstados.estados.filter(function (obj) {\n        return obj.sigla === uf.sigla;\n      })[0].cidades.map(function (obj) {\n        return {\n          \"nome\": obj,\n          \"cidade\": latinizeService.latinize(obj.toUpperCase())\n        };\n      });\n\n      root.$broadcast('cidadeLoadedOutro');\n    };\n    //endregion\n\n    //region Carregar Cidades\n    vm.$on('cidadeLoaded', function () {\n      if (vm.dados.cidadeTemp) {\n        var temp = $filter('filter')(vm.cidades, {'cidade': latinizeService.latinize(vm.dados.cidadeTemp).toUpperCase()}, true);\n        vm.dados.cidade = temp && temp[0] ? temp[0] : {};\n        delete vm.dados.cidadeTemp;\n      }\n    });\n\n    vm.$on('cidadeLoadedOutro', function () {\n      if (vm.dados.outro.cidadeTempOutro) {\n        var tempOutro = $filter('filter')(vm.cidadesOutro, {'cidade': latinizeService.latinize(vm.dados.outro.cidadeTempOutro).toUpperCase()}, true);\n        vm.dados.outro.cidade = tempOutro && tempOutro[0] ? tempOutro[0] : {};\n        delete vm.dados.outro.cidadeTempOutro;\n      }\n    });\n    //endregion\n\n    //region Cliente\n    vm.procurarCliente = function (cpf) {\n      if (!cpf || cpf.length < 11) {\n        return;\n      }\n\n      apiService\n        .search('clientes', cpf)\n        .then(function (res) {\n          vm.dados.documento = res.result.documento;\n          vm.dados.nome = res.result.nome;\n          vm.dados.telefone = res.result.telefone;\n          vm.dados.celular = res.result.celular;\n          vm.dados.id = res.result.id;\n          vm.dados.sexo = res.result.sexo;\n          vm.dados.email = res.result.email;\n\n          if (res.result.enderecos.length == 1) {\n            vm.dados.enderecoCerto = true;\n            vm.dados.cep = res.result.enderecos[0].cep;\n            vm.dados.numero = res.result.enderecos[0].numero;\n            vm.dados.endereco = res.result.enderecos[0].endereco;\n            vm.dados.bairro = res.result.enderecos[0].bairro;\n            vm.dados.uf = $filter('filter')(vm.estados, {'sigla': res.result.enderecos[0].uf.toUpperCase()}, true)[0];\n            vm.dados.cidadeTemp = res.result.enderecos[0].cidade;\n          } else {\n            vm.dados.enderecoCerto = false;\n            res.result.enderecos.map(function (obj) {\n              if (obj.enderecooriginal == 1) {\n                vm.dados.outro.cep = obj.cep;\n                vm.dados.outro.numero = obj.numero;\n                vm.dados.outro.endereco = obj.endereco;\n                vm.dados.outro.bairro = obj.bairro;\n                vm.dados.outro.uf = $filter('filter')(vm.estados, {'sigla': obj.uf.toUpperCase()}, true)[0];\n                vm.dados.outro.cidadeTempOutro = obj.cidade;\n              } else {\n                vm.dados.cep = obj.cep;\n                vm.dados.numero = obj.numero;\n                vm.dados.endereco = obj.endereco;\n                vm.dados.bairro = obj.bairro;\n                vm.dados.uf = $filter('filter')(vm.estados, {'sigla': obj.uf.toUpperCase()}, true)[0];\n                vm.dados.cidadeTemp = obj.cidade;\n              }\n            });\n          }\n\n        }, function (err) {\n//          console.log(err);\n        });\n    };\n\n    vm.salvarDados = function () {\n      var enviar = angular.copy(vm.dados);\n      enviarParaSalvar.enderecos = [];\n\n      enviarParaSalvar.id = enviar.id;\n      enviarParaSalvar.documento = enviar.documento;\n      enviarParaSalvar.nome = enviar.nome;\n      enviarParaSalvar.telefone = enviar.telefone;\n      enviarParaSalvar.celular = enviar.celular;\n      enviarParaSalvar.email = enviar.email;\n      enviarParaSalvar.sexo = enviar.sexo;\n\n      var endereco1 = {\n        \"cep\": enviar.cep,\n        \"endereco\": enviar.endereco,\n        \"numero\": enviar.numero,\n        \"bairro\": enviar.bairro,\n        \"uf\": enviar.uf.sigla,\n        \"cidade\": enviar.cidade.nome,\n        \"enderecoOriginal\": enviar.enderecoCerto\n      };\n      enviarParaSalvar.enderecos.push(endereco1);\n\n      if (!enviar.enderecoCerto) {\n        var endereco2 = {\n          \"cep\": enviar.outro.cep,\n          \"endereco\": enviar.outro.endereco,\n          \"numero\": enviar.outro.numero,\n          \"bairro\": enviar.outro.bairro,\n          \"uf\": enviar.outro.uf.sigla,\n          \"cidade\": enviar.outro.cidade.nome,\n          \"enderecoOriginal\": !enviar.enderecoCerto\n        };\n        enviarParaSalvar.enderecos.push(endereco2);\n      }\n\n      enviarParaSalvar.peso = apiService.getStorage('carrinho').reduce(function (carry, next) {\n        return carry + parseFloat(next.peso);\n      }, 0);\n\n      apiService.post('clientes/save', enviarParaSalvar).then(function (res) {\n        apiService.setStorage('cliente', res.result);\n        if (root.temaStorage.mercado_pago) {\n          $state.go('pagamentoMP');\n        } else {\n          $state.go('pagamento');\n        }\n      }, function (err) {\n        alert('Ocorreu um erro ao salvar os dados do Cliente.')\n      })\n    };\n    //endregion\n\n    //region Limpar Endereços\n    var limpaEndereco = function () {\n      vm.dados.endereco = \"\";\n      vm.dados.bairro = \"\";\n      vm.dados.uf = \"\";\n      delete vm.dados.cidadeTemp;\n    };\n\n    var limpaOutroEndereco = function () {\n      vm.dados.outro.endereco = \"\";\n      vm.dados.outro.bairro = \"\";\n      vm.dados.outro.uf = \"\";\n      delete vm.dados.outro.cidadeTempOutro;\n    };\n    //endregion\n\n    //region Procurar CEP's\n    vm.procuraCep = function (cep) {\n      apiService.cep(cep).then(function (res) {\n        limpaEndereco();\n        vm.dados.endereco = res.logradouro;\n        vm.dados.bairro = res.bairro;\n        vm.dados.uf = $filter('filter')(vm.estados, {'sigla': res.uf}, true)[0];\n        vm.dados.cidadeTemp = res.localidade;\n      });\n    };\n\n    vm.procuraOutroCep = function (cep) {\n      apiService.cep(cep).then(function (res) {\n        limpaOutroEndereco();\n        vm.dados.outro.endereco = res.logradouro;\n        vm.dados.outro.bairro = res.bairro;\n        vm.dados.outro.uf = $filter('filter')(vm.estados, {'sigla': res.uf}, true)[0];\n        vm.dados.outro.cidadeTempOutro = res.localidade;\n      });\n    };\n    //endregion\n  }\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('produtosController', produtosController);\n\n  produtosController.$inject = ['$scope', '$rootScope', 'apiService', '$stateParams', '$state', '$filter'];\n\n  function produtosController($scope, $rootScope, apiService, $stateParams, $state, $filter) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    if (!$stateParams.categoria) {\n      $state.go('categorias');\n      return\n    }\n\n    vm.maxParcelas = root.temaStorage['parcela' + root.temaStorage.max_parcelas];\n\n    vm.menuActive = $stateParams.categoria;\n\n    vm.loading = false;\n\n    vm.categorias = apiService.getStorage('categorias');\n\n    vm.produtoActive = $filter('filter')(vm.categorias, {'id': parseInt(vm.menuActive)}, true)[0].descricao;\n\n    vm.produtos = [];\n\n    var categoriasItem = vm.categorias.filter(function (obj) {\n      return obj.id == $stateParams.categoria\n    })[0];\n\n    if (categoriasItem.categorias) {\n      var itensDoFiltro = categoriasItem.categorias.map(function (obj) {\n        return obj.codigocategoria;\n      });\n\n      var filtro = {\n        \"itens\": itensDoFiltro\n      }\n\n      apiService.post('produtos/filtro', filtro).then(function (res) {\n        vm.loading = true;\n        vm.produtos = res.result.filter(function (obj) {\n          return obj['preco' + root.temaStorage.listaPreco] > 0;\n        }).map(function (obj) {\n          obj.preco = obj['preco' + root.temaStorage.listaPreco];\n          obj.precopromocao = obj['precopromocao' + root.temaStorage.listaPreco];\n\n          if (parseFloat(obj.precopromocao) == 0) {\n            obj.comJuros = ((parseFloat(obj.preco) + (parseFloat(obj.preco) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\n          } else {\n            obj.comJuros = ((parseFloat(obj.precopromocao) + (parseFloat(obj.precopromocao) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\n          }\n\n          return obj;\n        });\n      });\n\n    }\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('produtoController', produtoController);\n\n  produtoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$stateParams', '$timeout'];\n\n  function produtoController($scope, $rootScope, apiService, $state, $stateParams, $timeout) {\n    var vm = $scope;\n    var root = $rootScope;\n\n    vm.qnt = 1;\n    vm.produtosRelacionados = [];\n\n    vm.carrinho = apiService.getStorage('carrinho') || [];\n    vm.produto = {};\n\n    vm.maxParcelas = root.temaStorage['parcela' + root.temaStorage.max_parcelas];\n\n    apiService.get('produtos/' + $stateParams.id).then(function (res) {\n      vm.produto = res.result;\n\n      vm.produto.preco = vm.produto['preco' + root.temaStorage.listaPreco];\n      vm.produto.precopromocao = vm.produto['precopromocao' + root.temaStorage.listaPreco];\n\n      vm.imagemGrande = vm.produto.imagens[0];\n\n      if (parseFloat(vm.produto.precopromocao) == 0) {\n        vm.produto.comJuros = ((parseFloat(vm.produto.preco) + (parseFloat(vm.produto.preco) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\n        vm.produto.semJuros = (parseFloat(vm.produto.preco) + (parseFloat(vm.produto.preco) * parseFloat(root.temaStorage.parcela0)) / 100).toFixed(2);\n      } else {\n        vm.produto.comJuros = ((parseFloat(vm.produto.precopromocao) + (parseFloat(vm.produto.precopromocao) * parseFloat(vm.maxParcelas)) / 100).toFixed(2)) / parseInt(root.temaStorage.max_parcelas);\n        vm.produto.semJuros = (parseFloat(vm.produto.precopromocao) + (parseFloat(vm.produto.precopromocao) * parseFloat(root.temaStorage.parcela0)) / 100).toFixed(2);\n      }\n\n      apiService.post('produtos/relacionados', {\n        \"produtocodigo\": vm.produto.codigoproduto\n      }).then(function (res) {\n        vm.produtosRelacionados = res.result;\n      }, function (err) {\n        alert(err.error);\n      });\n\n    }, function (err) {\n      alert(err.error);\n    });\n\n    vm.minus = function () {\n      if (vm.qnt - 1 < 0) {\n        vm.qnt = 0;\n      } else {\n        vm.qnt -= 1;\n      }\n\n      if (vm.qnt == 0) {\n        vm.removerItem(item);\n      }\n    };\n\n    vm.more = function () {\n      vm.qnt += 1;\n    };\n\n    vm.selectColor = function (item) {\n      vm.cores.map(function (obj) {\n        obj.selected = false;\n      });\n\n      item.selected = true;\n    };\n\n    vm.changeImg = function (item) {\n      vm.imagemGrande = item;\n    };\n\n    vm.addCarrinho = function (item) {\n      var exist = vm.carrinho.filter(function (obj) {\n        return obj.codigobarras == item.codigobarras;\n      });\n\n      if (exist.length > 0) {\n        vm.carrinho = vm.carrinho.map(function (obj) {\n          if (obj.codigobarras) {\n            obj.qnt = vm.qnt;\n          }\n          return obj;\n        });\n\n        $timeout(function () {\n          root.itensCarrinho = vm.carrinho.length;\n        });\n\n        apiService.setStorage('carrinho', vm.carrinho);\n      } else {\n        item.qnt = vm.qnt;\n        vm.carrinho.push(item);\n        apiService.setStorage('carrinho', vm.carrinho);\n      }\n      $state.go('carrinho');\n    };\n  };\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('finalizacaoController', finalizacaoController);\n\n  finalizacaoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout'];\n\n  function finalizacaoController($scope, $rootScope, apiService, $state, $timeout) {\n    var vm = $scope;\n    var root = $rootScope;\n    vm.dadosVendedor = {};\n    vm.formaPagamento = '';\n    vm.editarPagamentoFlag = false;\n    vm.cliente = apiService.getStorage('cliente');\n    vm.formaPagamentoStorage = apiService.getStorage('formaPagamento');\n    vm.comprovante = apiService.getStorage('comprovante');\n    vm.frete = apiService.getStorage('frete');\n    var boleto = apiService.getStorage('boleto');\n    vm.hideComprovante = true;\n    vm.showBoleto = {\n      \"show\": false,\n      \"boleto\": \"\"\n    };\n    vm.totalCarrinho = 0;\n    vm.totalCarrinhoFrete = 0;\n\n    $timeout(function () {\n      root.itensCarrinho = 0;\n    });\n\n    apiService.delStorage('cliente');\n    apiService.delStorage('carrinho');\n\n    if (boleto.boleto) {\n      vm.showBoleto.show = true;\n      vm.showBoleto.boleto = boleto.boleto;\n    }\n\n    if (boleto.mp) {\n      vm.hideComprovante = false;\n    }\n\n    var getComprovante = function () {\n      $timeout(function () {\n        vm.comprovante = apiService.getStorage('comprovante');\n      });\n\n      if (!vm.comprovante) {\n        getComprovante();\n      }\n    };\n\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\n\n    var calcTotal = function () {\n      return vm.listaCompras.reduce(function (previousValue, obj) {\n          return previousValue + (obj.preco * obj.qnt);\n        }, 0) + parseFloat(vm.cliente.freteValor.valor);\n    };\n\n    vm.totalCarrinho = calcTotal();\n\n    var padLeft = function (nr, n, str) {\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\n    };\n\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\n\n    vm.limparSessao = function () {\n      apiService.delStorage('comprovante');\n      apiService.delStorage('cliente');\n      apiService.delStorage('carrinho');\n      apiService.delStorage('formaPagamento');\n      apiService.delStorage('comprovanteCodigos');\n      apiService.delStorage('vendedor');\n      apiService.delStorage('frete');\n      apiService.delStorage('boleto');\n      $timeout(function () {\n        root.itensCarrinho = 0;\n      });\n    };\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('pagamentoController', pagamentoController);\n\n  pagamentoController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout'];\n\n  function pagamentoController($scope, $rootScope, apiService, $state, $timeout) {\n    var vm = $scope;\n    var root = $rootScope;\n    vm.dadosVendedor = {};\n    vm.formaPagamento = '';\n    vm.editarPagamentoFlag = false;\n    vm.cliente = apiService.getStorage('cliente');\n    vm.formaPagamentoStorage = apiService.getStorage('formaPagamento');\n    vm.comprovante = apiService.getStorage('comprovante');\n    vm.frete = apiService.getStorage('frete');\n\n    vm.totalCarrinho = 0;\n    vm.totalCarrinhoFrete = 0;\n\n    var getComprovante = function () {\n      $timeout(function () {\n        vm.comprovante = apiService.getStorage('comprovante');\n      });\n\n      if (!vm.comprovante) {\n        getComprovante();\n      }\n    };\n\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\n\n    var calcTotal = function () {\n      return vm.listaCompras.reduce(function (previousValue, obj) {\n        return previousValue + (obj.preco * obj.qnt);\n      }, 0);\n    };\n\n    vm.totalCarrinho = calcTotal();\n\n    var padLeft = function (nr, n, str) {\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\n    };\n\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\n\n    vm.validarVendedor = function () {\n      var enviar = {};\n      apiService.delStorage('comprovante');\n      enviar.identificacao = vm.dadosVendedor.identificacao;\n      enviar.senha = vm.dadosVendedor.senha;\n      apiService.post('vendedores/validate', enviar).then(function (res) {\n        apiService.setStorage('vendedor', res.result);\n        root.openFoto();\n      }, function (err) {\n        alert(err.error);\n      })\n    };\n\n    vm.editarPagamento = function () {\n      vm.editarPagamentoFlag = !vm.editarPagamentoFlag;\n\n      apiService.setStorage('formaPagamento', vm.formaPagamento);\n\n      if (vm.editarPagamentoFlag && vm.formaPagamento.total) {\n        $timeout(function () {\n          var frete = 0;\n          if (vm.frete) {\n            frete = parseFloat(vm.cliente.freteValor.valor);\n          }\n          vm.totalCarrinhoFrete = angular.copy(vm.totalCarrinho) + frete;\n        });\n      }\n    };\n\n    var calcularFrete = function (cep) {\n      var dados = {\n        \"cep\": cep,\n        \"peso\": vm.listaCompras.reduce(function (carry, next) {\n          return carry + parseFloat(next.peso);\n        }, 0),\n        \"total\": calcTotal()\n      };\n      getFrete(dados);\n    };\n\n    var getFrete = function (dados) {\n      apiService\n        .post('frete', dados)\n        .then(function (res) {\n          apiService.setStorage('frete', res.result);\n          vm.frete = res.result;\n          vm.totalCarrinhoFrete = dados.total + parseFloat(res.result.valor);\n        });\n    };\n\n    vm.$on('confirmarImg', function () {\n      var formaPagamento = apiService.getStorage('formaPagamento');\n      vm.comprovante = apiService.getStorage('comprovante');\n      var comprovantes = apiService.getStorage('comprovanteCodigos');\n      var auth = apiService.getStorage('auth');\n      vm.cliente = apiService.getStorage('cliente');\n      var vendedor = apiService.getStorage('vendedor');\n\n      var send = {};\n      send.idcliente = vm.cliente.id;\n      send.email = auth.email;\n      send.frete = vm.frete.valor;\n      send.prazo = vm.frete.prazo;\n      send.total = vm.formaPagamentoStorage.total;\n      send.totalSemJuros = vm.listaCompras.reduce(function (previousValue, obj) {\n        return previousValue + (obj.preco * obj.qnt);\n      }, 0);\n      send.idPedido = vm.cliente.idPedido;\n      send.img = vm.comprovante;\n\n      send.produtos = vm.listaCompras.map(function (obj) {\n        return {\n          \"produto_id\": obj.id,\n          \"codigoproduto\": obj.codigoproduto,\n          \"qnt\": obj.qnt,\n          \"preco\": obj.preco,\n        };\n      });\n\n      if (comprovantes) {\n        send.comprovantes = comprovantes.map(function (obj) {\n          return {\n            \"bandeira\": obj.bandeira.id,\n            \"codigo\": obj.codigo,\n            \"vendedor_id\": vendedor.id\n          };\n        });\n      }\n\n      send.parcelas = formaPagamento.parcelas;\n      send.aVista = formaPagamento.aVista;\n\n      apiService.post('pedidos/save', send).then(function (res) {\n        alert('Pedido finalizado com sucesso!');\n        apiService.setStorage('boleto', res.result);\n        $state.go('finalizacao');\n      }, function (err) {\n        if (err.code === 1) {\n          alert(err.error);\n        } else {\n          alert('Pedido não concluída, por favor tente novamente!');\n        }\n        $state.go('pagamento');\n      });\n    });\n\n    var comJurosAVista = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela0']) / 100)) + parseFloat(vm.cliente.freteValor.valor);\n    vm.listaPagamentos = [\n      {\n        \"index\": 0,\n        \"parcelas\": 0,\n        \"aVista\": true,\n        \"descricao\": 'À vista | R$ ' + comJurosAVista.toFixed(2).replace('.', ','),\n        \"total\": comJurosAVista\n      }\n    ];\n\n    var maxParcelas = root.temaStorage.max_parcelas;\n\n    for (var i = 1; i <= maxParcelas; i++) {\n      var comJuros = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela' + i]) / 100)) + parseFloat(vm.cliente.freteValor.valor);\n      var pagamento = {\n        \"index\": i + 1,\n        \"parcelas\": i,\n        \"aVista\": false,\n        \"descricao\": 'Cartão de crédito | ' + i + 'x de R$ ' + (comJuros / i).toFixed(2).replace('.', ','),\n        \"total\": comJuros\n      };\n\n      if (root.temaStorage['parcela' + i] == 0) {\n        pagamento.descricao += \" s/ juros\"\n      }\n\n      vm.listaPagamentos.push(pagamento);\n    }\n\n    calcularFrete(vm.cliente.cep);\n  }\n\n})\n(angular);","(function (angular) {\n  \"use strict\";\n  angular.module('appToten')\n         .controller('pagamentoMpController', pagamentoMpController);\n\n  pagamentoMpController.$inject = ['$scope', '$rootScope', 'apiService', '$state', '$timeout', 'mercadoPago', 'cfpLoadingBar'];\n\n  function pagamentoMpController($scope, $rootScope, apiService, $state, $timeout, mercadoPago, cfpLoadingBar) {\n    var vm = $scope;\n    var root = $rootScope;\n    vm.dadosVendedor = {};\n    vm.formaPagamento = '';\n    vm.editarPagamentoFlag = false;\n    vm.cliente = apiService.getStorage('cliente');\n    vm.comprovante = apiService.getStorage('comprovante');\n    vm.frete = apiService.getStorage('frete');\n\n    vm.dados = {\n      'type': 'CPF',\n      'cpf': vm.cliente.documento\n    };\n\n    vm.okCartaoCredito = false;\n\n    vm.infoNeeded = true;\n\n    vm.tipoPagamento = apiService.getStorage('tiposPagamentoMP') || [];\n\n    vm.totalCarrinho = 0;\n    vm.totalCarrinhoFrete = 0;\n\n    vm.listaCompras = apiService.getStorage('carrinho') || [];\n\n    if (vm.tipoPagamento.length === 0) {\n      mercadoPago.getPaymentsMethods().then(function (res) {\n        console.log(res);\n        apiService.setStorage('tiposPagamentoMP', res.response);\n        vm.tipoPagamento = res.response;\n      });\n    }\n\n    vm.mesValidade = Array.apply(null, Array(12)).map(function (_, i) {\n      return {\n        \"name\": i + 1,\n        \"id\": i + 1\n      };\n    });\n    vm.dados.mes = 1;\n\n    var anoAtual = new Date().getFullYear();\n    vm.anoValidade = Array.apply(null, Array(12)).map(function (_, i) {\n      return {\n        \"name\": anoAtual + i,\n        \"id\": anoAtual + i\n      };\n    });\n    vm.dados.ano = anoAtual;\n\n    vm.validaCartao = function (cartao) {\n      if (cartao && cartao.toString().length >= 6) {\n        mercadoPago.getBin(cartao.toString()).then(function (res) {\n          vm.okCartaoCredito = res.status !== 200 && res.status !== 201;\n          if (res.status !== 200 && res.status !== 201) {\n            alert('Parece que seu cartão não é válido.');\n          }\n          vm.tipoPagamento.map(function (obj) {\n            if (res.status !== 200 && res.status !== 201) {\n              obj.active = false;\n            } else {\n              vm.dados.typeId = res.response[0].id;\n              obj.active = obj.id === res.response[0].id;\n            }\n          });\n        });\n      }\n    };\n\n    vm.salvarPagamento = function () {\n      var formaPagamento = apiService.getStorage('formaPagamento');\n      var comprovante = apiService.getStorage('comprovante');\n      var auth = apiService.getStorage('auth');\n      var cliente = apiService.getStorage('cliente');\n      var vendedor = apiService.getStorage('vendedor');\n      var formaPagamentoStorage = apiService.getStorage('formaPagamento');\n\n      cfpLoadingBar.start();\n\n      mercadoPago.getIdTypes().then(function (res) {\n        vm.dados.type = res.response[0].id;\n        mercadoPago.mPago().clearSession();\n\n        var form = document.getElementById(\"formaPagamento\");\n        mercadoPago.createToken(form).then(function (res) {\n          cfpLoadingBar.complete();\n\n          if (res.status !== 200 && res.status !== 201) {\n            alert('Algumas informações do seu cartão não estão corretas, por favor verifique.');\n            return;\n          }\n          var send = {};\n          send.token = res.response.id;\n          send.method = vm.dados.typeId;\n          send.idcliente = cliente.id;\n          send.email = auth.email;\n          send.frete = vm.frete.valor;\n          send.prazo = vm.frete.prazo;\n          send.total = formaPagamentoStorage.total;\n          send.totalSemJuros = vm.listaCompras.reduce(function (previousValue, obj) {\n            return previousValue + (obj.preco * obj.qnt);\n          }, 0);\n\n          send.idPedido = cliente.idPedido;\n\n          send.produtos = vm.listaCompras.map(function (obj) {\n            return {\n              \"produto_id\": obj.id,\n              \"codigoproduto\": obj.codigoproduto,\n              \"qnt\": obj.qnt,\n              \"preco\": obj.preco,\n            };\n          });\n\n          send.parcelas = formaPagamento.parcelas;\n          send.aVista = formaPagamento.aVista;\n\n          apiService.post('pedidos/saveMp', send).then(function (res) {\n            if (res.result.boleto) {\n              alert('Pedido esperando finalização!');\n            } else {\n              alert('Pedido finalizado com sucesso!');\n            }\n\n            apiService.setStorage('boleto', res.result);\n            $state.go('finalizacao');\n          }, function (err) {\n            if (err.code == 1) {\n              alert(err.error.msg);\n            } else {\n              alert('Pedido não concluída, por favor tente novamente!');\n            }\n            $state.go('pagamentoMP');\n          });\n\n        });\n      });\n    };\n\n    //region Informações do pagamento\n    var calcTotal = function () {\n      return vm.listaCompras.reduce(function (previousValue, obj) {\n        return previousValue + (obj.preco * obj.qnt);\n      }, 0);\n    };\n\n    vm.totalCarrinho = calcTotal();\n\n    vm.editarPagamento = function () {\n      vm.editarPagamentoFlag = !vm.editarPagamentoFlag;\n\n      apiService.setStorage('formaPagamento', vm.formaPagamento);\n\n      if (vm.editarPagamentoFlag && vm.formaPagamento.total) {\n        $timeout(function () {\n          var frete = 0;\n          if (vm.frete) {\n            frete = parseFloat(vm.cliente.freteValor.valor);\n          }\n          vm.totalCarrinhoFrete = angular.copy(vm.totalCarrinho) + frete;\n        });\n      }\n\n      if ((vm.formaPagamento.boleto) || (!vm.formaPagamento.boleto && vm.formaPagamento.aVista)) {\n        $timeout(function () {\n          vm.infoNeeded = false;\n          vm.dados.typeId = 'bolbradesco';\n          vm.tipoPagamento.map(function (obj) {\n            obj.active = obj.id === 'bolbradesco';\n          });\n        });\n      } else {\n        vm.infoNeeded = true;\n      }\n    };\n\n    var padLeft = function (nr, n, str) {\n      return Array(n - String(nr).length + 1).join(str || '0') + nr;\n    };\n\n    vm.idPedido = 'TESTE.' + padLeft(vm.cliente.idPedido, 13).replace(/^(\\d{4})(\\d{4})(\\d+)(\\d{2})/, '$1.$2.$3-$4');\n    //endregion\n\n    //region Frete\n    var calcularFrete = function (cep) {\n      var dados = {\n        \"cep\": cep,\n        \"peso\": vm.listaCompras.reduce(function (carry, next) {\n          return carry + parseFloat(next.peso);\n        }, 0),\n        \"total\": calcTotal()\n      };\n      getFrete(dados);\n    };\n    var getFrete = function (dados) {\n      apiService\n        .post('frete', dados)\n        .then(function (res) {\n          apiService.setStorage('frete', res.result);\n          vm.frete = res.result;\n          vm.totalCarrinhoFrete = dados.total + parseFloat(res.result.valor);\n        });\n    };\n    //endregion\n\n    //region Gerar Select Pagamento\n    var comJurosAVista = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela0']) / 100)) + parseFloat(vm.cliente.freteValor.valor);\n    vm.listaPagamentos = [\n      {\n        \"index\": 90,\n        \"parcelas\": 0,\n        \"boleto\": true,\n        \"aVista\": true,\n        \"descricao\": 'Boleto | R$ ' + comJurosAVista.toFixed(2).replace('.', ','),\n        \"total\": comJurosAVista\n      }\n    ];\n\n    var maxParcelas = root.temaStorage.max_parcelas;\n\n    for (var i = 1; i <= maxParcelas; i++) {\n      var comJuros = (vm.totalCarrinho + vm.totalCarrinho * (parseFloat(root.temaStorage['parcela' + i]) / 100)) + parseFloat(vm.cliente.freteValor.valor);\n      var pagamento = {\n        \"index\": i + 1,\n        \"parcelas\": i,\n        \"boleto\": false,\n        \"aVista\": false,\n        \"descricao\": 'Cartão de crédito | ' + i + 'x de R$ ' + (comJuros / i).toFixed(2).replace('.', ','),\n        \"total\": comJuros\n      };\n\n      if (root.temaStorage['parcela' + i] == 0) {\n        pagamento.descricao += \" s/ juros\"\n      }\n\n      vm.listaPagamentos.push(pagamento);\n    }\n    //endregion\n\n    calcularFrete(vm.cliente.cep);\n  }\n\n})\n(angular);"]}